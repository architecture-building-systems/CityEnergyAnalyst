[general]
project = ~/reference-case-open
project.type = PathParameter
project.help = Select the path of the project you're working on.

scenario-name = baseline
scenario-name.type = ScenarioNameParameter
scenario-name.help = Select the name of the scenario of the project you're working on.

scenario = {general:project}/{general:scenario-name}
scenario.type = ScenarioParameter
scenario.help = Select the scenario you're working on.

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = True for quicker calculation.
multiprocessing.category = Advanced

number-of-cpus-to-keep-free = 1
number-of-cpus-to-keep-free.type = IntegerParameter
number-of-cpus-to-keep-free.help = Limits the maximum number of processors to use for multiprocessing. By default, one CPU is kept free.
number-of-cpus-to-keep-free.category = Advanced

debug = false
debug.type = BooleanParameter
debug.help = Enable debugging-specific behaviors.
debug.category = Advanced

plugins =
plugins.type = PluginListParameter
plugins.help = A list of plugins (python classes that implement cea.plugin.CeaPlugin)

[database-helper]
databases-path = CH
databases-path.type = DatabasePathParameter
databases-path.help = Either a full path to databases or the standard databases contained within the CEA.

databases = archetypes, assemblies, components
databases.type = MultiChoiceParameter
databases.choices = archetypes, assemblies, components
databases.help = List of databases to initialise from the selected path. Select all, usually.
databases.category = Customisation

[archetypes-mapper]
input-databases = comfort, architecture, air-conditioning, internal-loads, supply, schedules
input-databases.type = MultiChoiceParameter
input-databases.choices = comfort, architecture, air-conditioning, internal-loads, supply, schedules
input-databases.help = List of inputs to map from Database to each building in Scenario.
input-databases.category = Customisation

buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings for data-mapping based on the Database. Leave blank to select all.
buildings.category = Customisation

[streets-helper]
include-private-streets = true
include-private-streets.type = BooleanParameter
include-private-streets.help = True to include private streets. CEA relies on OpenStreetMap's categorisation, which is not always accurate.
include-private-streets.category = Customisation

[terrain-helper]
grid-size = 30
grid-size.type = IntegerParameter
grid-size.nullable = false
grid-size.help = Grid size or the solution of the terrain file. Refrain from using less than 10 meters.
grid-size.category = Customisation

buffer = 50
buffer.type = RealParameter
buffer.help = Buffer in metres offsetting the containing box of zone and surrounding geometries. This helps to ensure the terrain covers all buildings.
buffer.category = Customisation

[surroundings-helper]
buffer = 50
buffer.type = RealParameter
buffer.help = Buffer in meters offsetting the zone to query surrounding buildings.

[zone-helper]
height-ag =
height-ag.type = RealParameter
height-ag.nullable = true
height-ag.help = Average height of buildings within the zone (in meters). Leave it blank to obtain from Open Street Maps (less accurate).

floors-ag =
floors-ag.type = IntegerParameter
floors-ag.nullable = true
floors-ag.help = Average number of floors above ground of all buildings within the zone. Leave it blank to obtain from Open Street Maps (less accurate).

year-construction =
year-construction.nullable = true
year-construction.type = IntegerParameter
year-construction.help = Average year of construction of buildings within the zone. Leave it blank to obtain from Open Street Maps (less accurate).

height-bg = 3
height-bg.type = RealParameter
height-bg.help = Average height of buildings below ground (in meters).

floors-bg = 1
floors-bg.type = IntegerParameter
floors-bg.help = Average number of floors below ground of all buildings within the zone.

occupancy-type = Get it from open street maps
occupancy-type.choices = Get it from open street maps, MULTI_RES, OFFICE, RETAIL, SCHOOL, HOTEL, GYM, HOSPITAL, INDUSTRIAL, RESTAURANT, SINGLE_RES, SERVERROOM, SWIMMING, FOODSTORE, LIBRARY, COOLROOM, PARKING
occupancy-type.type = ChoiceParameter
occupancy-type.help = Predominant occupancy type of all buildings. Use "Get it from open street maps" to obtain from Open Street Maps (less accurate).

include-building-parts = true
include-building-parts.type = BooleanParameter
include-building-parts.help = Includes polygons tagged as as `building:part` on OpenStreetMap as well as polygons tagged as `building`.

fix-overlapping-geometries = true
fix-overlapping-geometries.type = BooleanParameter
fix-overlapping-geometries.help = Tries to eliminate overlapping building volumes (and subsequent double counting) by fixing overlaps of ground-surface polygons and retaining only the tallest of the overlapping buildings.

[trees-helper]
trees =
trees.type = FileParameter
trees.extensions = shp
trees.nullable = true
trees.help = Path to shapefile containing the geometries of tree canopies in polygon format and attributes of name (unique tree ID), height_tc (tree canopy height above ground in metres), and density_tc (tree canopy density).

[weather-helper]
weather =
weather.type = WeatherPathParameter
weather.help = Path to a weather file (.epw) or the label of one CEA Built-in weather file. Leave blank to fetch from third-party sources.

[radiation-crax]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the radiation simulation in the format of [BuildingID1, BuildingID2, ...]. Leave blank when simulating all buildings.

albedo = 0.2
albedo.type = RealParameter
albedo.help = Albedo of the terrain.
albedo.category = Parameters for crax

calculate-sensor-data = true
calculate-sensor-data.type = BooleanParameter
calculate-sensor-data.help =  False to only calculate total radiation for each building-facing orientation via polygon clipping method. If only demand calculations are needed, set it to false; if need to calculate radiation data for each grid point (only needed for running solar technologies), set it to true.
calculate-sensor-data.category = Advanced

using-cea-sensor = false
using-cea-sensor.type = BooleanParameter
using-cea-sensor.help =  True to use the cea-daysim method to generate sensor csv files. False to use the CRAX method to generate sensor csv files (more fast).
using-cea-sensor.category = Advanced

roof-grid = 2
roof-grid.type = RealParameter
roof-grid.help =  Grid resolution of the roof surfaces (m) for CRAX grid generation method.
roof-grid.category = Level of Details

walls-grid = 2
walls-grid.type = RealParameter
walls-grid.help = Grid resolution of wall surfaces (m) for CRAX grid generation method.
walls-grid.category = Level of Details

mesh-clipping-view-factor = false
mesh-clipping-view-factor.type = BooleanParameter
mesh-clipping-view-factor.help = If set to false, the view factor of the grid uses the average view factor of the building surface it belongs to; if set to true, the view factor is calculated individually for each grid.
mesh-clipping-view-factor.category = Advanced

zone-geometry = 0
zone-geometry.type = RealParameter
zone-geometry.help = Simplification level of zone geometry; tolerance distance of points in meters from original.
zone-geometry.category = Level of Details

surrounding-geometry = 3
surrounding-geometry.type = RealParameter
surrounding-geometry.help = Simplification level of surroundings geometry; tolerance distance of points in meters from original.
surrounding-geometry.category = Level of Details

neglect-adjacent-buildings = false
neglect-adjacent-buildings.type = BooleanParameter
neglect-adjacent-buildings.help = True if adjacent walls with neighboring buildings should be neglected. If set to True, the results might be less accurate (there might be insolation on attached walls and no adiabatic surfaces between adjacent buildings will be considered), but the simulation time will decrease somewhat.
neglect-adjacent-buildings.category = Level of Details

neighbor-filter-altitude-angle = 15
neighbor-filter-altitude-angle.type = RealParameter
neighbor-filter-altitude-angle.help = The altitude angle threshold used to filter neighboring buildings when calculating reflected radiation from them.
neighbor-filter-altitude-angle.category = Level of Details

crax-bin-directory =
crax-bin-directory.type = PathParameter
crax-bin-directory.help = Path to the CRAX binaries. This path will be used instead of the default CEA Dependencies.
crax-bin-directory.category = Advanced

update-shadow-day = 15
update-shadow-day.type = RealParameter
update-shadow-day.help = Shadow update frequency, i.e., the interval (in days) to update the shadow calculation results. When set to 1, shadows are calculated on an hourly basis.
update-shadow-day.category = Level of Details

[radiation]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the radiation simulation. Leave blank when simulating all buildings.

roof-grid = 10
roof-grid.type = RealParameter
roof-grid.help =  Grid resolution for the roof surfaces. Use 200 (maximum) if you want only one point per surface.
roof-grid.category = Level of Details

walls-grid = 200
walls-grid.type = RealParameter
walls-grid.help = Grid resolution for wall surfaces. Use 200 (maximum) if you want only one point per surface.
walls-grid.category = Level of Details

zone-geometry = 2
zone-geometry.type = RealParameter
zone-geometry.help = Simplification level of zone geometry; tolerance distance of points in meters from original.
zone-geometry.category = Level of Details

surrounding-geometry = 5
surrounding-geometry.type = RealParameter
surrounding-geometry.help = Simplification level of surroundings geometry; tolerance distance of points in meters from original.
surrounding-geometry.category = Level of Details

consider-floors = true
consider-floors.type = BooleanParameter
consider-floors.help = True if floors are considered in the geometry.
consider-floors.category = Level of Details

neglect-adjacent-buildings = false
neglect-adjacent-buildings.type = BooleanParameter
neglect-adjacent-buildings.help = True if adjacent walls with neighboring buildings should be neglected. If set to True, the results might be less accurate (there might be insolation on attached walls and no adiabatic surfaces between adjacent buildings will be considered), but the simulation time will decrease somewhat.
neglect-adjacent-buildings.category = Level of Details

use-latest-daysim-binaries = true
use-latest-daysim-binaries.type = BooleanParameter
use-latest-daysim-binaries.help = True to use the latest Daysim binaries which is faster and able to run larger sites, yet producing non-deterministic results. False to use old binary for reproducibility. Applicable only to Windows and will be ignored otherwise.
use-latest-daysim-binaries.category = Advanced

albedo = 0.2
albedo.type = RealParameter
albedo.help = Albedo of the terrain.
albedo.category = Parameters for DAYSIM

rad-ab = 4
rad-ab.type = IntegerParameter
rad-ab.help = Number of ambient bounces.
rad-ab.category = Parameters for DAYSIM

rad-ad = 512
rad-ad.type = IntegerParameter
rad-ad.help = Number of ambient divisions.
rad-ad.category = Parameters for DAYSIM

rad-as = 32
rad-as.type = IntegerParameter
rad-as.help = Number of ambient super-samples.
rad-as.category = Parameters for DAYSIM

rad-ar = 20
rad-ar.type = IntegerParameter
rad-ar.help = Ambient resolution.
rad-ar.category = Parameters for DAYSIM

rad-aa = 0.15
rad-aa.type = RealParameter
rad-aa.help = Ambient accuracy.
rad-aa.category = Parameters for DAYSIM

rad-lr = 8
rad-lr.type = IntegerParameter
rad-lr.help = Maximum number of reflections.
rad-lr.category = Parameters for DAYSIM

rad-st = 0.5
rad-st.type = RealParameter
rad-st.help = Specular sampling threshold.
rad-st.category = Parameters for DAYSIM

rad-sj = 0.7
rad-sj.type = RealParameter
rad-sj.help = Specular sampling jitter.
rad-sj.category = Parameters for DAYSIM

rad-lw = 0.05
rad-lw.type = RealParameter
rad-lw.help = Minimum weight of each ray.
rad-lw.category = Parameters for DAYSIM

rad-dj = 0.7
rad-dj.type = RealParameter
rad-dj.help = Direct jitter.
rad-dj.category = Parameters for DAYSIM

rad-ds = 0
rad-ds.type = RealParameter
rad-ds.help = Direct sampling ration.
rad-ds.category = Parameters for DAYSIM

rad-dr = 0
rad-dr.type = IntegerParameter
rad-dr.help = Number of relays from secondary sources.
rad-dr.category = Parameters for DAYSIM

rad-dp = 32
rad-dp.type = IntegerParameter
rad-dp.help = Secondary source pre-sampling density.
rad-dp.category = Parameters for DAYSIM

daysim-bin-directory =
daysim-bin-directory.type = PathParameter
daysim-bin-directory.help = Path to the Daysim binaries. This path will be used instead of the default CEA Dependencies.
daysim-bin-directory.category = Advanced

n-buildings-in-chunk = 100
n-buildings-in-chunk.type = IntegerParameter
n-buildings-in-chunk.help =  Minimum number of building groups (chunks) to be sent for multiprocessing.
n-buildings-in-chunk.category = Advanced

write-sensor-data = true
write-sensor-data.type = BooleanParameter
write-sensor-data.help =  Write also data per point in the grid. (Only needed to run solar technologies). False saves space in disk
write-sensor-data.category = Advanced

[radiation-simplified]
sample-buildings =
sample-buildings.type = BuildingsParameter
sample-buildings.help = List of buildings to sample for the radiation simulation. Note that this list of sampled buildings must be a subset of the list of buildings selected above.

buffer = 50
buffer.type = RealParameter
buffer.help = Perimeter buffer (m) around sample buildings .

[occupancy-helper]

occupancy-model = deterministic
occupancy-model.type = ChoiceParameter
occupancy-model.choices = deterministic, stochastic
occupancy-model.help = Two occupant modeling options: deterministic and stochastic. The deterministic model directly uses user-provided schedules to represent occupant behavior, while the stochastic model employs a two-state Markov chain approach based on the work of Page et al. (2008). In the stochastic model, occupant presence is probabilistically determined at each time step, using the deterministic model’s schedules as the basis for calculating the likelihood of presence at the current and subsequent time steps.


buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings to apply the selected occupancy model. Leave blank to select all.
buildings.category = Customisation

[demand]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the demand simulation (to simulate all buildings leave blank).

loads-output =
loads-output.type = MultiChoiceParameter
loads-output.choices = PV,
    GRID,
    GRID_a,
    GRID_l,
    GRID_v,
    GRID_ve,
    GRID_data,
    GRID_pro,
    GRID_aux,
    GRID_ww,
    GRID_hs,
    GRID_cs,
    GRID_cdata,
    GRID_cre,
    E_sys, Eal, Ea, El, Ev, Eve, Edata, Epro, Eaux,
    E_ww, E_hs, E_cs, E_cre, E_cdata,
    Qhs_sen_shu, Qhs_sen_ahu, Qhs_lat_ahu,
    Qhs_sen_aru, Qhs_lat_aru, Qhs_sen_sys,
    Qhs_lat_sys, Qhs_em_ls, Qhs_dis_ls,
    Qhs_sys_shu, Qhs_sys_ahu, Qhs_sys_aru,
    Qcs_sys_scu, Qcs_sys_ahu, Qcs_sys_aru,
    DH_hs, Qhs_sys, Qhs,
    DH_ww, Qww_sys, Qww,
    DC_cs, Qcs_sys, Qcs,
    DC_cre, Qcre_sys, Qcre,
    DC_cdata, Qcdata_sys, Qcdata,
    NG_hs,
    COAL_hs,
    OIL_hs,
    WOOD_hs,
    SOLAR_hs,
    NG_ww,
    COAL_ww,
    OIL_ww,
    WOOD_ww,
    SOLAR_ww,
    Qcs_sen_scu, Qcs_sen_ahu,
    Qcs_lat_ahu, Qcs_sen_aru, Qcs_lat_aru,
    Qcs_sen_sys, Qcs_lat_sys, Qcs_em_ls,
    Qcs_dis_ls, Qhpro_sys, Qcpro_sys,
    QH_sys, QC_sys
loads-output.help = List of loads output by the demand simulation (to simulate all load types in demand_writer, leave blank).
loads-output.category = Advanced

massflows-output =
massflows-output.type = MultiChoiceParameter
massflows-output.choices = mcpww_sys, mcptw, mcpcs_sys, mcphs_sys, mcpcs_sys_ahu, mcpcs_sys_aru, mcpcs_sys_scu, mcphs_sys_ahu, mcphs_sys_aru, mcphs_sys_shu, mcpcre_sys, mcpcdata_sys
massflows-output.help = List of mass flow rates output by the demand simulation (to simulate all system mass flow rates in demand_writer, leave blank).
massflows-output.category = Advanced

temperatures-output =
temperatures-output.type = MultiChoiceParameter
temperatures-output.choices =  T_int, T_ext, theta_o, Tww_sys_sup, Tww_sys_re, Tcre_sys_re, Tcre_sys_sup, Tcdata_sys_re, Tcdata_sys_sup, Ths_sys_sup_aru, Ths_sys_sup_ahu, Ths_sys_sup_shu, Ths_sys_re_aru, Ths_sys_re_ahu, Ths_sys_re_shu, Tcs_sys_sup_aru, Tcs_sys_sup_ahu, Tcs_sys_sup_scu, Tcs_sys_re_aru, Tcs_sys_re_ahu, Tcs_sys_re_scu, Ths_sys_sup, Ths_sys_re, Tcs_sys_sup, Tcs_sys_re
temperatures-output.help = List of temperatures output by the demand simulation (to simulate all temperatures in demand_writer, leave blank).
temperatures-output.category = Advanced

resolution-output = hourly
resolution-output.type = ChoiceParameter
resolution-output.choices = hourly, monthly
resolution-output.help = Time step resolution of the demand simulation (hourly or monthly).
resolution-output.category = Advanced

use-dynamic-infiltration-calculation = false
use-dynamic-infiltration-calculation.type = BooleanParameter
use-dynamic-infiltration-calculation.help = True if dynamic infiltration calculations are considered (slower run times!).
use-dynamic-infiltration-calculation.category = Advanced

overheating-warning = true
overheating-warning.type = BooleanParameter
overheating-warning.help = Set to False to bypass overheating warning.
overheating-warning.category = Advanced

[costs]
capital = true
capital.type = BooleanParameter
capital.help = Estimate Capital costs (total and annualized) due to supply systems (allocated according to the supply-systems input database)

operational = true
operational.type = BooleanParameter
operational.help = Estimate Operational costs (variable and fixed) due to supply systems operation (allocated according to the supply-systems input database)

[emissions]
year-to-calculate = 2025
year-to-calculate.type = IntegerParameter
year-to-calculate.help = Defines the year to calculate the emissions. If a building is greater than 60 years, embodied emissions are not considered.

embodied = true
embodied.type = BooleanParameter
embodied.help = Estimate emissions due to construction and dismantling of buildings (allocated according to the age input database, LCA database and building geometry)

operational = true
operational.type = BooleanParameter
operational.help = Estimate emissions due to supply systems operation (allocated according to the supply-systems input database)

[extract-reference-case]
destination = {general:scenario}/../..
destination.type = PathParameter
destination.help = Destination for the extracted reference case (zipped within CityEnergyAnalyst/cea/examples).

case = open
case.type = ChoiceParameter
case.choices = open, heating, cooling, WTP
case.help = Reference case to extract.

[solar]
type-pvpanel =
type-pvpanel.type = ColumnMultiChoiceParameter
type-pvpanel.help = Type(s) of PV panels. Leave blank to simulate all types.
type-pvpanel.locator = get_db4_components_conversion_conversion_technology_csv
type-pvpanel.column = code
type-pvpanel.kwargs = conversion_technology=PHOTOVOLTAIC_PANELS

type-scpanel = FP, ET
type-scpanel.type = MultiChoiceParameter
type-scpanel.choices = FP, ET
type-scpanel.help = Type of solar collector: "FP" (Flat-plate) or "ET" (Evacuated-tubes). Leave blank to simulate both types.

panel-on-roof = True
panel-on-roof.type = BooleanParameter
panel-on-roof.help = True if panels are considered on roof surfaces.

panel-on-wall = True
panel-on-wall.type = BooleanParameter
panel-on-wall.help = True if panels are considered on wall surfaces.

annual-radiation-threshold = 800
annual-radiation-threshold.type = RealParameter
annual-radiation-threshold.help = Only consider panels on surfaces that receive radiation above the defined threshold [kWh/m2/yr].

t-in-sc =
t-in-sc.type = RealParameter
t-in-sc.help = Inlet temperature of solar collectors in celsius (if blank: 60C for Flat-plate and 75C for Evacuated-tube).
t-in-sc.nullable = true
t-in-sc.category = Advanced

t-in-pvt =
t-in-pvt.type = RealParameter
t-in-pvt.help = Inlet temperature of PVT panels in celsius (if blank: 35C).
t-in-pvt.nullable = true
t-in-pvt.category = Advanced

solar-window-solstice = 4
solar-window-solstice.type = IntegerParameter
solar-window-solstice.help = Desired time of solar exposure on the solstice in hours.
solar-window-solstice.category = Advanced

max-roof-coverage = 1.0
max-roof-coverage.type = RealParameter
max-roof-coverage.help = Maximum panel coverage [m2/m2] of roof surfaces that reach minimum irradiation threshold (valid values between 0 and 1).

custom-tilt-angle = False
custom-tilt-angle.type = BooleanParameter
custom-tilt-angle.help = Calculate solar panel potential based on a user-specified panel tilt angle. If False, the tilt angle offering the highest yield per m2 of PV panel will be used for the calculation. However, since self-shading is automatically prevented, this might increase the distance between panel rows and lead to a smaller yield per m2 of roof area.

panel-tilt-angle = 10
panel-tilt-angle.type = RealParameter
panel-tilt-angle.help = Solar panel tilt angle if using user-defined tilt angle.

buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the photovoltaic (PV), photovoltaic thermal (PVT) and solar collector (SC) simulations (to simulate all buildings leave blank).
buildings.category = Customisation

[dbf-tools]
#converter of dbf to csv(xlsx) vice versa
input-file =
input-file.type = FileParameter
input-file.extensions = csv dbf xlsx
input-file.nullable = true
input-file.help = Path to the dbf or csv(xlsx) file.

output-file-name = converted_file.dbf
output-file-name.type = StringParameter
output-file-name.help = Name of the output file (with extension).

output-path =
output-path.type = PathParameter
output-path.help = Path to save the dbf <-> csv(xlsx) conversion results.

[to-rhino-gh]

include-zone = True
include-zone.type = BooleanParameter
include-zone.help = Always keep True. True to export Zone information, including Typology information and an Esri ShapeFile for geo-reference use.
include-zone.category = Detailed Settings

include-site = True
include-site.type = BooleanParameter
include-site.help = True to export and include the polygon drawn on the map of the Create-Scenario Wizard, if any.
include-site.category = Detailed Settings

include-surroundings = True
include-surroundings.type = BooleanParameter
include-surroundings.help = True to export and include Surroundings information.
include-surroundings.category = Detailed Settings

include-streets = True
include-streets.type = BooleanParameter
include-streets.help = True to export and include Streets information, if any.
include-streets.category = Detailed Settings

include-trees = True
include-trees.type = BooleanParameter
include-trees.help = True to export and include Trees information, if any.
include-trees.category = Detailed Settings

include-district-heating-network = True
include-district-heating-network.type = BooleanParameter
include-district-heating-network.help = True to export and include District Heating Network information, if any.
include-district-heating-network.category = Detailed Settings

include-district-cooling-network = True
include-district-cooling-network.type = BooleanParameter
include-district-cooling-network.help = True to export and include District Cooling Network information, if any.
include-district-cooling-network.category = Detailed Settings


[from-rhino-gh]

reference-scenario-name =
reference-scenario-name.type = ScenarioNameParameter
reference-scenario-name.help = Select the original Scenario executed with export-to-Rhino-Grasshopper. CEA can copy its database, terrain file, and/or weather file from the current Scenario.
reference-scenario-name.exclude_current = True

copy-database = True
copy-database.type = BooleanParameter
copy-database.help = True to copy the Database of the reference Scenario to the current Scenario. Archetypes-Mapper will also be executed populating the building properties using the Database coped from the reference-Scenario.

copy-terrain = False
copy-terrain.type = BooleanParameter
copy-terrain.help = True to copy the terrain file of the reference Scenario to the current Scenario. Use this when sure the new Scenario's all buildings including the surrounding fall on the precinct of the current Scenario.

copy-weather = True
copy-weather.type = BooleanParameter
copy-weather.help = True to copy the weather file of the reference Scenario to the current Scenario.

[shapefile-tools]
#converter of shp to csv(xlsx) and vice versa
input-file =
input-file.type = FileParameter
input-file.extensions = csv shp xlsx
input-file.nullable = true
input-file.help = Path to the ESRI Shapefile or csv(xlsx) file. csv(xlsx) Files need to have a column named "geometry" with cell contents following such a format as "[[463721.7362, 15245947.2], [463722.7364, 15245954.04], [463739.366, 15245953.25], [463721.7362, 15245947.2]]" for a triangle-shaped building footprint as an example. In the example, the unit of the coordinates is in metres. Unit in decimal degrees is supported when the coordinate reference system (crs) of the reference shapefile is in decimal degrees.

output-file-name = converted_file.shp
output-file-name.type = StringParameter
output-file-name.help = Name of the output file (with extension).

output-path =
output-path.type = PathParameter
output-path.help = Path to save the Shapefile <-> csv(xlsx) conversion results.

reference-crs-file  =
reference-crs-file.type = FileParameter
reference-crs-file.extensions = txt
reference-crs-file.nullable = true
reference-crs-file.help = Path to .txt file storing the reference crs information when converting csv(xlsx) file to ESRI Shapefile.  When converting ESRI Shapefile to csv(xlsx) file, set to the any .txt file if leave-blank is not possible.

polygon = True
polygon.type = BooleanParameter
polygon.help = Only required when converting csv(xlsx) file to ESRI Shapefile. True if the geometry column is interpreted as polygon coordinates, false if it is interpreted as a polyline. Ignore when converting ESRI Shapefile to csv(xlsx) File.


[sensitivity-analysis-tools]

create-scenario-directory = false
create-scenario-directory.type = BooleanParameter
create-scenario-directory.help = True if creating parallel CEA scenario inputs directories under the current project.

n = 32
n.type = IntegerParameter
n.help = The Saltelli sampler generates n*(2D+2) samples, where D is the number of variables.

having-variable-1 = true
having-variable-1.type = BooleanParameter
having-variable-1.help = True when having no less than 1 variable.

variable-1-lower-bound = 0
variable-1-lower-bound.type = RealParameter
variable-1-lower-bound.help = Lower bound of Variable 1.
variable-1-lower-bound.nullable = true

variable-1-upper-bound = 100
variable-1-upper-bound.type = RealParameter
variable-1-upper-bound.help = Upper bound of Variable 1.
variable-1-upper-bound.nullable = true

having-variable-2 = false
having-variable-2.type = BooleanParameter
having-variable-2.help = True when having no less than 2 variables.

variable-2-lower-bound =
variable-2-lower-bound.type = RealParameter
variable-2-lower-bound.help = Lower bound of Variable 2.
variable-2-lower-bound.nullable = true

variable-2-upper-bound =
variable-2-upper-bound.type = RealParameter
variable-2-upper-bound.help = Upper bound of Variable 2.
variable-2-upper-bound.nullable = true

having-variable-3 = false
having-variable-3.type = BooleanParameter
having-variable-3.help = True when having no less than 3 variables.

variable-3-lower-bound =
variable-3-lower-bound.type = RealParameter
variable-3-lower-bound.help = Lower bound of Variable 3.
variable-3-lower-bound.nullable = true

variable-3-upper-bound =
variable-3-upper-bound.type = RealParameter
variable-3-upper-bound.help = Upper bound of Variable 3.
variable-3-upper-bound.nullable = true

having-variable-4 = false
having-variable-4.type = BooleanParameter
having-variable-4.help = True when having no less than 4 variables.

variable-4-lower-bound =
variable-4-lower-bound.type = RealParameter
variable-4-lower-bound.help = Lower bound of Variable 4.
variable-4-lower-bound.nullable = true

variable-4-upper-bound =
variable-4-upper-bound.type = RealParameter
variable-4-upper-bound.help = Upper bound of Variable 4.
variable-4-upper-bound.nullable = true

having-variable-5 = false
having-variable-5.type = BooleanParameter
having-variable-5.help = True when having no less than 5 variables.

variable-5-lower-bound =
variable-5-lower-bound.type = RealParameter
variable-5-lower-bound.help = Lower bound of Variable 5.
variable-5-lower-bound.nullable = true

variable-5-upper-bound =
variable-5-upper-bound.type = RealParameter
variable-5-upper-bound.help = Upper bound of Variable 5.
variable-5-upper-bound.nullable = true

[format-helper]
scenarios-to-verify-and-migrate =
scenarios-to-verify-and-migrate.type = ScenarioNameMultiChoiceParameter
scenarios-to-verify-and-migrate.help = Select the Scenario(s) to verify (and migrate). Leave blank to select all Scenarios.

migrate-from-cea-3 = true
migrate-from-cea-3.type = BooleanParameter
migrate-from-cea-3.help = True to auto-migrate the input format to the current version of CEA-4 from CEA-3. Note the process of migration is not reversible.

[batch-process-workflow]
scenarios-to-simulate =
scenarios-to-simulate.type = ScenarioNameMultiChoiceParameter
scenarios-to-simulate.help = Select the Scenario(s) to simulate. Leave blank to simulate all Scenarios. Exclude the reference-Scenario when import-from-rhino-gh is set to True.

export-to-rhino-gh = false
export-to-rhino-gh.type = BooleanParameter
export-to-rhino-gh.help = True if exporting CEA scenarios into Rhino/Grasshopper-ready format.

import-from-rhino-gh = false
import-from-rhino-gh.type = BooleanParameter
import-from-rhino-gh.help = True if importing CEA scenarios from Rhino/Grasshopper-generated files.

database-helper = false
database-helper.type = BooleanParameter
database-helper.help = True if using CEA built-in databases. Select/link database under the respective tool tab and click Save Settings.
database-helper.category = Data Management

archetypes-mapper = false
archetypes-mapper.type = BooleanParameter
archetypes-mapper.help = True if executing CEA archetypes-mapper.
archetypes-mapper.category = Data Management

weather-helper = false
weather-helper.type = BooleanParameter
weather-helper.help = True if executing CEA weather-helper. Select/link weather file under the respective tool tab and click Save Settings.
weather-helper.category = Data Management

surroundings-helper = false
surroundings-helper.type = BooleanParameter
surroundings-helper.help = True if executing CEA surroundings-helper. Define buffer under the respective tool tab and click Save Settings.
surroundings-helper.category = Data Management

terrain-helper = false
terrain-helper.type = BooleanParameter
terrain-helper.help = True if executing CEA terrain helper. Define resolution and elevation under the respective tool tab and click Save Settings.
terrain-helper.category = Data Management

streets-helper = false
streets-helper.type = BooleanParameter
streets-helper.help = True if executing CEA streets-helper. Consider setting to True when executing thermal network analysis. CEA creates streets.shp based on OpenStreetMap data.
streets-helper.category = Data Management

radiation = false
radiation.type = BooleanParameter
radiation.help = True if executing CEA building radiation analysis using Daysim. Change default parameters under the respective tool tabs and click Save Settings.

solar-potential-pv = false
solar-potential-pv.type = BooleanParameter
solar-potential-pv.help = True if executing CEA solar-energy-potential-analysis using photovoltaic panels. Change default parameters under the respective tab and click Save Settings.

solar-potential-pvt = false
solar-potential-pvt.type = BooleanParameter
solar-potential-pvt.help = True if executing CEA solar-energy-potential-analysis using photovoltaic-thermal panels. Change default parameters under the respective tabs and click Save Settings

solar-potential-sc = false
solar-potential-sc.type = BooleanParameter
solar-potential-sc.help = True if executing CEA solar-energy-potential-analysis using solar collectors. Change default parameters under the respective tabs and click Save Settings.

shallow-geothermal-potential = false
shallow-geothermal-potential.type = BooleanParameter
shallow-geothermal-potential.help = True if executing CEA shallow-geothermal-potential-analysis. Change default parameters under the respective tool tab and click Save Settings.

water-body-potential = false
water-body-potential.type = BooleanParameter
water-body-potential.help = True if executing CEA water-body-potential-analysis. Change default parameters under the respective tool tab and click Save Settings.

demand-forecasting = false
demand-forecasting.type = BooleanParameter
demand-forecasting.help = True if executing CEA demand-forecasting. Change default parameters under the respective tool tabs (i.e. Building Occupancy and Building Energy Demand) and click Save Settings.

sewage-heat-potential= false
sewage-heat-potential.type = BooleanParameter
sewage-heat-potential.help = True if executing CEA sewage-heat-potential-analysis. Change default parameters under the respective tool tab and click Save Settings.

thermal-network-layout = false
thermal-network-layout.type = BooleanParameter
thermal-network-layout.help = True if executing CEA thermal-network-layout-design. Change default parameters under the respective tool tab and click Save Settings.

thermal-network-operation = false
thermal-network-operation.type = BooleanParameter
thermal-network-operation.help = True if executing CEA thermal-network-operation-analysis. Change default parameters under the respective tool tab and click Save Settings.

emissions = false
emissions.type = BooleanParameter
emissions.help = True if executing CEA life-cycle-analysis. Change default parameters under the respective tool tabs and click Save Settings.

system-costs = false
system-costs.type = BooleanParameter
system-costs.help = True if executing CEA system-costs-analysis.

optimisation = false
optimisation.type = BooleanParameter
optimisation.help = True if executing CEA district-energy-supply-system-optimisation. Change default parameters under the respective tabs (i.e. Supply System Part 1 - Decentralised and Supply System Part 2 - Centralised) and click Save Settings.

results-summary-and-analytics = false
results-summary-and-analytics.type = BooleanParameter
results-summary-and-analytics.help = True if generating a summary and advanced analytics based on the CEA results simulated. Customise the selection of metrics under the respective tool tab and click Save Settings.


[result-summary]
folder-name-to-save-exported-results =
folder-name-to-save-exported-results.type = StringParameter
folder-name-to-save-exported-results.nullable = true
folder-name-to-save-exported-results.help = Name the folder to store the exported .csv files, which to be found under Path - current_Scenario/export/results/summary_name_done_time. When left blank, the default path is to set as - current_Scenario/export/results/hours_period_range_done_time.

buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings selected for result summary. Leave blank when to select all.

filter-buildings-by-year-start = 1900
filter-buildings-by-year-start.type = IntegerParameter
filter-buildings-by-year-start.nullable = true
filter-buildings-by-year-start.help = Enforce a filer to further select buildings built in or after this year. Leave blank to ignore the lower bound when filtering by the year of construction.

filter-buildings-by-year-end = 2050
filter-buildings-by-year-end.type = IntegerParameter
filter-buildings-by-year-end.nullable = true
filter-buildings-by-year-end.help = Enforce a filer to further select buildings built in or before this year. Ensure year-end is the same or after year-start. Leave blank to ignore the upper bound when filtering by the year of construction.

filter-buildings-by-construction-type =
filter-buildings-by-construction-type.type = ColumnMultiChoiceParameter
filter-buildings-by-construction-type.help = Enforce a filter to further select buildings by one or more construction_type archetypes. Leave blank to select all.
filter-buildings-by-construction-type.locator = get_database_archetypes_construction_type
filter-buildings-by-construction-type.column = const_type

filter-buildings-by-use-type =
filter-buildings-by-use-type.type = ColumnMultiChoiceParameter
filter-buildings-by-use-type.help = Enforce a filter to further select buildings by one or more use_type (archetypes). For mixed-use buildings, CEA filers by the main use (i.e., the use type with the highest ratio among all use types of a building). Leave blank to select all.
filter-buildings-by-use-type.locator = get_database_archetypes_use_type
filter-buildings-by-use-type.column = use_type

min-ratio-as-main-use = 0
min-ratio-as-main-use.type= RealParameter
min-ratio-as-main-use.help= Set the minimum threshold (inclusive) for a use type to be considered as the main use of a building. A valid value ranges from 0 to 1.

aggregate-by-building = false
aggregate-by-building.type = BooleanParameter
aggregate-by-building.help = True if generate additional .csv files aggregating the CEA results for each selected building. Currently, CEA only aggregates results by buildings for the sum of time period defined below. Reach out to the CEA Team if you have a different use case of aggregation by buildings.

aggregate-by-time-period = hourly, daily, monthly, seasonally
aggregate-by-time-period.type = MultiChoiceParameter
aggregate-by-time-period.choices = hourly, daily, monthly, seasonally, annually
aggregate-by-time-period.help = Aggregate the CEA simulated results by selecting one or more time resolution. CEA will generate separated .csv files for each selected time resolution, based on the time period to be defined below. Annually is on possible for a time period of an entire year. Otherwise, a sum of the selected time period is provided.

period-start-date = 01, Jan
period-start-date.type = MultiChoiceParameter
period-start-date.choices = 01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
period-start-date.help = Define the start date (24 hours all-inclusive) of a time period for aggregation. Select one number and one month only. Ensure the combination is an actual date. CEA does not consider 29 Feb in a leap year.

period-end-date = 31, Dec
period-end-date.type = MultiChoiceParameter
period-end-date.choices = 01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
period-end-date.help = Define the end date (24 hours all-inclusive) of a time period for aggregation. Select one number and one month only. Ensure the combination is an actual date. CEA does not consider 29 Feb in a leap year. When end-date is before start-date, CEA consider the time period between the start-date and the end-date in the year after. When end-date is the same as start-date, CEA considers the 24 hours of this date.

metrics-building-energy-demand = true
metrics-building-energy-demand.type = BooleanParameter
metrics-building-energy-demand.help = Metrics to calculate: grid electricity consumption[kWh], enduse electricity demand[kWh], enduse cooling demand[kWh], enduse space cooling demand[kWh], enduse heating demand[kWh], enduse space heating demand[kWh], enduse dhw demand[kWh]. dhw = domestic hot water.
metrics-building-energy-demand.category = Metrics

metrics-emissions = true
metrics-emissions.type = BooleanParameter
metrics-emissions.help = Metrics to calculate: embodied emissions building construction[tonCO2-eq/yr], operation emissions[tonCO2-eq/yr], operation emissions grid[tonCO2-eq/yr]. This category only supports annual aggregation.
metrics-emissions.category = Metrics

metrics-solar-irradiation = true
metrics-solar-irradiation.type = BooleanParameter
metrics-solar-irradiation.help = Metrics to calculate: irradiation roof[kWh], irradiation window north[kWh], irradiation wall north[kWh], irradiation window south[kWh], irradiation wall south[kWh], irradiation window east[kWh], irradiation wall east[kWh], irradiation window west[kWh], irradiation wall west[kWh].
metrics-solar-irradiation.category = Metrics

metrics-photovoltaic-panels = true
metrics-photovoltaic-panels.type = BooleanParameter
metrics-photovoltaic-panels.help = Metrics to calculate: PV installed area total[m2], PV electricity total[kWh], PV installed area roof[m2], PV electricity roof[kWh], PV installed area north[m2], PV electricity north[kWh], PV installed area south[m2], PV electricity_south[kWh], PV installed area east[m2], PV electricity east[kWh], PV installed area west[m2], PV electricity west[kWh]. PV = photovoltaic panels.
metrics-photovoltaic-panels.category = Metrics

metrics-photovoltaic-thermal-panels = true
metrics-photovoltaic-thermal-panels.type = BooleanParameter
metrics-photovoltaic-thermal-panels.help = Metrics to calculate: PVT installed area total[m2], PVT electricity total[kWh], PVT heat total[kWh], PVT installed area roof[m2], PVT electricity roof[kWh], PVT heat roof[kWh], PVT installed area north[m2], PVT electricity north[kWh], PVT heat north[kWh], PVT installed area south[m2], PVT electricity south[kWh], PVT heat south[kWh], PVT installed area east[m2], PVT electricity east[kWh], PVT heat east[kWh], PVT installed area west[m2], PVT electricity west[kWh], PVT heat west[kWh]. PVT = photovoltaic-thermal panels.
metrics-photovoltaic-thermal-panels.category = Metrics

metrics-solar-collectors = true
metrics-solar-collectors.type = BooleanParameter
metrics-solar-collectors.help = Metrics to calculate: SC installed area total[m2], SC heat total[kWh], SC installed area roof[m2], SC heat roof[kWh], SC installed area north[m2], SC heat north[kWh], SC installed area south[m2], SC heat south[kWh], SC installed area east[m2], SC heat east[kWh], SC installed area west[m2], SC heat west[kWh]. SC = solar collectors.
metrics-solar-collectors.category = Metrics

metrics-other-renewables = true
metrics-other-renewables.type = BooleanParameter
metrics-other-renewables.help = Metrics to calculate: geothermal heat potential[kWh], area for ground source heat pump[m2], sewage heat potential[kWh], water body heat_potential[kWh]. This category does not support aggregation by buildings.
metrics-other-renewables.category = Metrics

metrics-district-heating = true
metrics-district-heating.type = BooleanParameter
metrics-district-heating.help = Metrics to calculate: DH plant thermal load[kWh], DH electricity consumption for pressure loss[kWh]. DH = district heating.
metrics-district-heating.category = Metrics

metrics-district-cooling = true
metrics-district-cooling.type = BooleanParameter
metrics-district-cooling.help = Metrics to calculate: DC plant thermal load[kWh], DC electricity consumption for pressure loss[kWh]. DC = district cooling.
metrics-district-cooling.category = Metrics

include-advanced-analytics = true
include-advanced-analytics.type = BooleanParameter
include-advanced-analytics.help = True to include a collection of advanced useful UEBM analytics.

use-cea-acronym-format-column-names = false
use-cea-acronym-format-column-names.type = BooleanParameter
use-cea-acronym-format-column-names.help = True to use CEA's acronym-format column names. False as default to use explicit-format metrics as above.

use-conditioned-floor-area-for-normalisation = false
use-conditioned-floor-area-for-normalisation.type = BooleanParameter
use-conditioned-floor-area-for-normalisation.help = True to use conditioned floor area [Af_m2] for normalisation. By default, all normalisations use gross floor area (GFA).
use-conditioned-floor-area-for-normalisation.category = Settings for Normalisation

[result-analytics]
all-scenarios = false
all-scenarios.type = BooleanParameter
all-scenarios.help = True if reading the results and calculating the advanced analytics for all scenarios under this project. False for the current scenario only.

[test]
type = unittest
type.type = ChoiceParameter
type.choices = unittest, integration
type.help = The test workflow to run

[trace-inputlocator]
scripts = archetypes-mapper, demand, emissions
scripts.type = MultiChoiceParameter
scripts.choices = compile,
    copy-default-databases,
    create-new-scenario,
    dashboard,
    archetypes-mapper,
    dbf-to-excel-to-dbf,
    decentralized,
    demand,
    emissions,
    excel-to-shapefile,
    extract-reference-case,
    lake-potential,
    shallow-geothermal-potential,
    list-demand-graphs-fields,
    multi-criteria-analysis,
    network-layout,
    costs,
    optimization,
    photovoltaic,
    photovoltaic-thermal,
    plots,
    plots-optimization,
    plots-scenario-comparisons,
    plots-supply-system,
    radiation,
    sensitivity-demand-analyze,
    sensitivity-demand-samples,
    sensitivity-demand-simulate,
    sewage-potential,
    shapefile-to-excel,
    solar-collector,
    supply-system-simulation,
    test,
    thermal-network,
    thermal-network-optimization
scripts.help = Sequential list of scripts to run.

meta-output-file = {general:scenario}/outputs/trace_inputlocator.output.yml
meta-output-file.type = FileParameter
meta-output-file.extensions = yml
meta-output-file.help = Path to the filename of the yml output file.


[thermal-network]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network to be simulated: "DH" (district heating) or "DC" (district cooling).

network-model = simplified
network-model.type = ChoiceParameter
network-model.choices = simplified, detailed
network-model.help = Choose either simplified (seconds) or detailed model (several hours)

min-head-substation = 20
min-head-substation.type = RealParameter
min-head-substation.help = Minimum head loss in kPa expected at each thermal transfer substation
min-head-substation.category = Parameters of simplified model

hw-friction-coefficient = 100
hw-friction-coefficient.type = IntegerParameter
hw-friction-coefficient.help = Hanzen-Williams friction coefficient considered for the pipes in mm
hw-friction-coefficient.category = Parameters of simplified model

peak-load-velocity = 2
peak-load-velocity.type = RealParameter
peak-load-velocity.help = Maximum velocity expected in pipes in m/s (Higher values result in smaller pipe diameters)
peak-load-velocity.category = Parameters of simplified model

equivalent-length-factor = 0.2
equivalent-length-factor.type = RealParameter
equivalent-length-factor.help = fraction of pressure losses expected dues to accessories in the network (valid values within 0.0 and 0.6)

peak-load-percentage = 100
peak-load-percentage.type = RealParameter
peak-load-percentage.help = Percentage of the peak demand in % to use for pipe sizing (valid values within 0 and 200)
peak-load-percentage.category = Parameters of simplified model

set-diameter = true
set-diameter.type = BooleanParameter
set-diameter.help = True if diameters are set by maximum velocity (2m/s), false if diameters are considered a fixed input.
set-diameter.category = Parameters of detailed model

load-max-edge-flowrate-from-previous-run = false
load-max-edge-flowrate-from-previous-run.type = BooleanParameter
load-max-edge-flowrate-from-previous-run.help = True to bypass the calc_max_edge_flowrate function, using results from the previous simulation (useful for debugging).
load-max-edge-flowrate-from-previous-run.category = Parameters of detailed model

start-t = 0
start-t.type = IntegerParameter
start-t.help = Start hour for calculations (0-based).
start-t.category = Parameters of detailed model

stop-t = 8760
stop-t.type = IntegerParameter
stop-t.help = Stop hour for calculations (0-based, upper bound).
stop-t.category = Parameters of detailed model

use-representative-week-per-month = false
use-representative-week-per-month.type = BooleanParameter
use-representative-week-per-month.help = True to use the data for first week of each month instead of the full month.
use-representative-week-per-month.category = Parameters of detailed model

minimum-mass-flow-iteration-limit = 30
minimum-mass-flow-iteration-limit.type = IntegerParameter
minimum-mass-flow-iteration-limit.help = Maximum number of iterations permitted for the increase of minimum mass flows in the network.
minimum-mass-flow-iteration-limit.category = Parameters of detailed model

minimum-edge-mass-flow = 0.1
minimum-edge-mass-flow.type = RealParameter
minimum-edge-mass-flow.help = Minimum mass flow rate permitted in the network (in kg/s). If the mass flow rate in any edge is below this value at any time period, the thermal network will be re-sized accordingly
minimum-edge-mass-flow.category = Parameters of detailed model

diameter-iteration-limit = 10
diameter-iteration-limit.type = IntegerParameter
diameter-iteration-limit.help = Maximum number of iterations permitted for the network diameter optimization (relevant for looped network result convergence).
diameter-iteration-limit.category = Parameters of detailed model

substation-cooling-systems = ahu, aru, scu
substation-cooling-systems.type = MultiChoiceParameter
substation-cooling-systems.choices = ahu, aru, scu, re, data
substation-cooling-systems.help = List of cooling loads to be supplied (DC mode)
substation-cooling-systems.category = Parameters of detailed model

substation-heating-systems = ahu, aru, shu, ww
substation-heating-systems.type = MultiChoiceParameter
substation-heating-systems.choices = ahu, aru, shu, ww
substation-heating-systems.help = List of heating loads to be supplied (DH mode)
substation-heating-systems.category = Parameters of detailed model

temperature-control = VT
temperature-control.type = ChoiceParameter
temperature-control.choices = VT, CT
temperature-control.help = Type of control strategy for plant operation: "VT" (Variable Temperature / Variable Flow) or "CT" (Constant Temperature / Variable Flow).
temperature-control.category = Parameters of detailed model

plant-supply-temperature = 80
plant-supply-temperature.type = RealParameter
plant-supply-temperature.help = Supply temperature of plants in celsius (relevant if temperature-control is set to 'CT').
plant-supply-temperature.category = Parameters of detailed model


[thermal-network-optimization]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network to be simulated: "DH" (district heating) or "DC" (district cooling).

network-names =
network-names.type = ListParameter
network-names.help = List of network file names for either DH (district heating) or DC (district cooling) network types.
network-names.category = Advanced

file-type = shp
file-type.type = ChoiceParameter
file-type.choices = csv, shp
file-type.help = Format of the input files (either csv file or a shape file).

set-diameter = true
set-diameter.type = BooleanParameter
set-diameter.help = True if diameters are set by min and max flow rates, false if diameters are considered a fixed input.

load-max-edge-flowrate-from-previous-run = false
load-max-edge-flowrate-from-previous-run.type = BooleanParameter
load-max-edge-flowrate-from-previous-run.help = True to bypass the calc_max_edge_flowrate function using results from the previous simulation (useful for debugging).
load-max-edge-flowrate-from-previous-run.category = Advanced

start-t = 0
start-t.type = IntegerParameter
start-t.help = Start hour for calculations (0-based).
start-t.category = Advanced

stop-t = 8760
stop-t.type = IntegerParameter
stop-t.help = Stop hour for calculations (0-based, upper bound).
stop-t.category = Advanced

network-name =
network-name.type = StringParameter
network-name.help = Name of the network for which to run the network optimization.
network-name.category = Advanced

possible-plant-sites =
possible-plant-sites.type = ListParameter
possible-plant-sites.help = List building names considered candidates for plant locations (leave blank if all buildings are considered candidates).
possible-plant-sites.category = Advanced

min-number-of-plants = 1
min-number-of-plants.type = IntegerParameter
min-number-of-plants.help = Minimum number of plants used for thermal network optimization (minimum value is 1).
min-number-of-plants.category = Advanced

max-number-of-plants = 1
max-number-of-plants.type = IntegerParameter
max-number-of-plants.help = Maximum number of plants used for thermal network optimization (minimum value is 1).
max-number-of-plants.category = Advanced

number-of-individuals = 6
number-of-individuals.type = IntegerParameter
number-of-individuals.help = Number of individuals at the start of the optimization (parameter for genetic algorithm).
number-of-individuals.category = Advanced

chance-of-mutation = 20
chance-of-mutation.type = RealParameter
chance-of-mutation.help = Percentage chance of mutation in the genetic algorithm.
chance-of-mutation.category = Advanced

number-of-generations = 20
number-of-generations.type = IntegerParameter
number-of-generations.help = Number of generations used for thermal network optimization.
number-of-generations.category = Advanced

lucky-few = 1
lucky-few.type = IntegerParameter
lucky-few.help = Number of individuals which are randomly picked despite not being optimal (must be smaller than the number of individuals minus one).
lucky-few.category = Advanced

optimize-loop-branch = false
optimize-loop-branch.type = BooleanParameter
optimize-loop-branch.help = True if the thermal network optimization will dictate the use of purely branched or mixed network layouts.
optimize-loop-branch.category = Advanced

optimize-network-loads = false
optimize-network-loads.type = BooleanParameter
optimize-network-loads.help = True if the thermal network optimization will dictate which heat loads are provided by the network.
optimize-network-loads.category = Advanced

optimize-building-connections = false
optimize-building-connections.type = BooleanParameter
optimize-building-connections.help = True if the thermal network optimization will dictate which buildings to connect to the network.
optimize-building-connections.category = Advanced

use-rule-based-approximation = false
use-rule-based-approximation.type = BooleanParameter
use-rule-based-approximation.help = True if the thermal network optimization will use a rule based approach to narrow the solution space (e.g. by limiting the amount of possible plant locations).
use-rule-based-approximation.category = Advanced

use-representative-week-per-month = false
use-representative-week-per-month.type = BooleanParameter
use-representative-week-per-month.help = True to use the data for first week of each month instead of the full month.
use-representative-week-per-month.category = Advanced

minimum-mass-flow-iteration-limit = 30
minimum-mass-flow-iteration-limit.type = IntegerParameter
minimum-mass-flow-iteration-limit.help = Maximum number of iterations permitted for the increase of minimum mass flows in the network.
minimum-mass-flow-iteration-limit.category = Advanced

minimum-edge-mass-flow = 0.1
minimum-edge-mass-flow.type = RealParameter
minimum-edge-mass-flow.help = Minimum mass flow rate permitted in the network (in kg/s). If the mass flow rate in any edge is below this value at any time period, the thermal network will be re-sized accordingly.
minimum-edge-mass-flow.category = Advanced

diameter-iteration-limit = 10
diameter-iteration-limit.type = IntegerParameter
diameter-iteration-limit.help = Maximum number of iterations permitted for the network diameter optimization (relevant for looped network result convergence).
diameter-iteration-limit.category = Advanced

substation-cooling-systems = ahu, aru, scu
substation-cooling-systems.type = ListParameter
substation-cooling-systems.help = List of cooling loads to be supplied (DC mode).
substation-cooling-systems.category = Advanced

substation-heating-systems = ahu, aru, shu, ww
substation-heating-systems.type = ListParameter
substation-heating-systems.help = List of heating loads to be supplied (DH mode).
substation-heating-systems.category = Advanced

disconnected-buildings =
disconnected-buildings.type = ListParameter
disconnected-buildings.help = List of buildings which are disconnected from the network.
disconnected-buildings.category = Advanced

yearly-cost-calculations = false
yearly-cost-calculations.type = BooleanParameter
yearly-cost-calculations.help = True if cost calculations of CT opex and heat/cooling production are based on a yearly basis.
yearly-cost-calculations.category = Advanced

[optimization]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DC, DH
network-type.help = District Heating (DH) or District Cooling (DC)

technologies-DH = NG_Cogen, WB_Cogen, DB_Cogen, NG_BaseBoiler, NG_PeakBoiler, WS_HP, SS_HP, GS_HP, DS_HP, PVT, SC_ET, SC_FP, PV
technologies-DH.type = MultiChoiceParameter
technologies-DH.choices = NG_Cogen, WB_Cogen, DB_Cogen, NG_BaseBoiler, NG_PeakBoiler, WS_HP, SS_HP, GS_HP, DS_HP, PVT, SC_ET, SC_FP, PV
technologies-DH.help = Technologies to consider during optimisation of the central supply system when DH is selected

technologies-DC = NG_Trigen, WS_BaseVCC, WS_PeakVCC, AS_BaseVCC, AS_PeakVCC, Storage, PV
technologies-DC.type = MultiChoiceParameter
technologies-DC.choices = NG_Trigen, WS_BaseVCC, WS_PeakVCC, AS_BaseVCC, AS_PeakVCC, Storage, PV
technologies-DC.help = Technologies to consider during optimisation of the central supply system when DC is selected

objective-functions-DC = system_energy_demand, anthropogenic_heat
objective-functions-DC.type = MultiChoiceParameter
objective-functions-DC.choices = cost, GHG_emissions, system_energy_demand, anthropogenic_heat
objective-functions-DC.help = Objective functions to evaluate in the optimisation when DC is selected. When DH is selected, the two set objective functions are 'GHG_emissions' and 'cost'

cold-storage-type =
cold-storage-type.type = SingleThermalStorageParameter
cold-storage-type.help = Thermal Storage technology to consider based on the Conversion local database

population-size =
population-size.type = IntegerParameter
population-size.help = this denotes the number of individuals, leave in blank to compute the suggested by deb et al., 2014 (92)
population-size.nullable = true
population-size.category = Advanced

number-of-generations = 100
number-of-generations.type = IntegerParameter
number-of-generations.help = number of generations for genetic algorithm (NSGA-III)
number-of-generations.category = Advanced

random-seed = 100
random-seed.type = IntegerParameter
random-seed.help = Random seed to make it easy to replicate the results of the scenarios.
random-seed.category = Advanced

mutation-prob = 0.1
mutation-prob.type = RealParameter
mutation-prob.help = Mutation probability for genetic algorithm (NSGA-III)
mutation-prob.category = Advanced

mutation-method-integer = Flipbit
mutation-method-integer.type = ChoiceParameter
mutation-method-integer.choices = Flipbit, Shuffle
mutation-method-integer.help = Mutation method for integer variables (network connectivity)
mutation-method-integer.category = Advanced

mutation-method-continuous = Polynomial
mutation-method-continuous.type = ChoiceParameter
mutation-method-continuous.choices = Polynomial, Shuffle
mutation-method-continuous.help = Mutation method for continuous variables (plant capacities)
mutation-method-continuous.category = Advanced

crossover-prob = 0.9
crossover-prob.type = RealParameter
crossover-prob.help = Cross-over probability for genetic algorithm (NSGA-III)
crossover-prob.category = Advanced

crossover-method-integer = Uniform
crossover-method-integer.type = ChoiceParameter
crossover-method-integer.choices = Uniform, TwoPoint
crossover-method-integer.help = Crossover method for integer variables (network connectivity)
crossover-method-integer.category = Advanced

crossover-method-continuous = Uniform
crossover-method-continuous.type = ChoiceParameter
crossover-method-continuous.choices = Uniform, TwoPoint
crossover-method-continuous.help = Crossover method for continuous variables (plant capacities)
crossover-method-continuous.category = Advanced

[optimization-new]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DC, DH
network-type.help = District Heating (DH) or District Cooling (DC)

cooling-components = ABSORPTION_CHILLERS, VAPOR_COMPRESSION_CHILLERS, UNITARY_AIR_CONDITIONERS
cooling-components.type = MultiChoiceParameter
cooling-components.choices = ABSORPTION_CHILLERS, VAPOR_COMPRESSION_CHILLERS, UNITARY_AIR_CONDITIONERS
cooling-components.help = Technologies to consider for providing cooling energy (order indicates priority for deployment)

heating-components = BOILERS, COGENERATION_PLANTS, HEAT_PUMPS
heating-components.type = MultiChoiceParameter
heating-components.choices = BOILERS, COGENERATION_PLANTS, HEAT_PUMPS
heating-components.help = Technologies to consider for providing heat (order indicates priority for deployment)

heat-rejection-components = COOLING_TOWERS
heat-rejection-components.type = MultiChoiceParameter
heat-rejection-components.choices = COOLING_TOWERS
heat-rejection-components.help = Technologies used for heat rejection

maximum-number-of-networks = 2
maximum-number-of-networks.type = IntegerParameter
maximum-number-of-networks.help = Maximum number of thermal networks that should be generated across the district.

objective-functions = system_energy_demand, anthropogenic_heat
objective-functions.type = MultiChoiceParameter
objective-functions.choices = cost, GHG_emissions, system_energy_demand, anthropogenic_heat
objective-functions.help = Objective functions based on which supply systems and networks should be evaluated in the optimization

generate-detailed-outputs = false
generate-detailed-outputs.type = BooleanParameter
generate-detailed-outputs.help = Generate hourly profiles describing the supply system behaviours
generate-detailed-outputs.category = Advanced

retain-run-results = false
retain-run-results.type = BooleanParameter
retain-run-results.help = Retain the results of this run, if deactivated results will be overwritten by the next run
retain-run-results.category = Advanced

available-energy-sources = power_grid, fossil_fuels, bio_fuels
available-energy-sources.type = MultiChoiceParameter
available-energy-sources.choices = power_grid, fossil_fuels, bio_fuels
available-energy-sources.help = The energy carriers within these categories are assumed to have limitless supply.
available-energy-sources.category = Advanced

available-energy-potentials = photovoltaic_panels, photovoltaic_thermal_panels, solar_collectors, geothermal_energy, water_bodies, sewage
available-energy-potentials.type = MultiChoiceParameter
available-energy-potentials.choices = photovoltaic_panels, photovoltaic_thermal_panels, solar_collectors, geothermal_energy, water_bodies, sewage
available-energy-potentials.help = Supply system components that can provide electricity to the main heating/cooling components
available-energy-potentials.category = Advanced

component-efficiency-model-complexity = constant
component-efficiency-model-complexity.type = ChoiceParameter
component-efficiency-model-complexity.choices = constant, non-linear
component-efficiency-model-complexity.help = Complexity of the efficiency models describing the behaviour of the supply system components.
component-efficiency-model-complexity.category = Advanced

network-temperature = -1
network-temperature.type = IntegerParameter
network-temperature.help = The temperature of the network in degrees Celsius (if negative, temperature will default to 60°C for DH and 10°C for DC respectively)
network-temperature.category = Advanced

systems-algorithm = NSGAIII
systems-algorithm.type = ChoiceParameter
systems-algorithm.choices = NSGAIII
systems-algorithm.help = Genetic optimisation algorithm (selection) applied for supply systems
systems-algorithm.category = Optimisation Algorithm Parameters

systems-mutation-method = PolynomialBounded
systems-mutation-method.type = ChoiceParameter
systems-mutation-method.choices = UniformBounded, PolynomialBounded
systems-mutation-method.help = Mutation method applied to genomes encoding supply systems
systems-mutation-method.category = Optimisation Algorithm Parameters

systems-crossover-method = Uniform
systems-crossover-method.type = ChoiceParameter
systems-crossover-method.choices = OnePoint, TwoPoint, Uniform
systems-crossover-method.help = Crossover method applied to genomes encoding supply systems
systems-crossover-method.category = Optimisation Algorithm Parameters

networks-algorithm = NSGAIII
networks-algorithm.type = ChoiceParameter
networks-algorithm.choices = NSGAIII
networks-algorithm.help = Genetic optimisation algorithm (selection) applied for networks
networks-algorithm.category = Optimisation Algorithm Parameters

networks-mutation-method = ClusterSwitch
networks-mutation-method.type = ChoiceParameter
networks-mutation-method.choices = ShuffleIndexes, UniformInteger, ClusterSwitch
networks-mutation-method.help = Mutation method applied to genomes encoding networks
networks-mutation-method.category = Optimisation Algorithm Parameters

networks-crossover-method = ClusterSwap
networks-crossover-method.type = ChoiceParameter
networks-crossover-method.choices = OnePoint, TwoPoint, Uniform, ClusterSwap, ClusterAlignment
networks-crossover-method.help = Crossover method applied to genomes encoding networks
networks-crossover-method.category = Optimisation Algorithm Parameters

building-clustering-method = Louvain
building-clustering-method.type = ChoiceParameter
building-clustering-method.choices = HDBSCAN, Louvain
building-clustering-method.help = Method for clustering buildings before the optimisation (only relevant for clustering-based mutation and crossover operations for networks)
building-clustering-method.category = Optimisation Algorithm Parameters

networks-overlap-correction-method = Random
networks-overlap-correction-method.type = ChoiceParameter
networks-overlap-correction-method.choices = None, MergeOnOverlap, CutOnOverlap, DeleteOnOverlap, Random
networks-overlap-correction-method.help = Method for eliminating overlapping networks in the district
networks-overlap-correction-method.category = Optimisation Algorithm Parameters

ga-population-size =
ga-population-size.type = IntegerParameter
ga-population-size.help = this denotes the number of individuals used in the genetic algorithm (for NSGAIII leave in blank to compute the suggested by deb et al., 2014 (92))
ga-population-size.nullable = true
ga-population-size.category = Optimisation Algorithm Parameters

ga-number-of-generations = 3
ga-number-of-generations.type = IntegerParameter
ga-number-of-generations.help = number of generations for the genetic algorithm
ga-number-of-generations.category = Optimisation Algorithm Parameters

ga-mutation-prob = 0.1
ga-mutation-prob.type = RealParameter
ga-mutation-prob.help = Independent probability for the mutation of chromosomes in the genetic algorithms
ga-mutation-prob.category = Optimisation Algorithm Parameters

ga-crossover-prob = 0.3
ga-crossover-prob.type = RealParameter
ga-crossover-prob.help = Independent probability for the recombination of chromosomes in the genetic algorithms (if applicable)
ga-crossover-prob.category = Optimisation Algorithm Parameters

ga-mutation-eta = 0.5
ga-mutation-eta.type = RealParameter
ga-mutation-eta.help = Crowding degree of the mutation. A high eta will produce a mutant resembling its parent, while a small eta will produce a solution much more different.
ga-mutation-eta.category = Optimisation Algorithm Parameters

min-head-substation = 20
min-head-substation.type = RealParameter
min-head-substation.help = Minimum head loss in kPa expected at each thermal transfer substation
min-head-substation.category = Network Model Parameters

hw-friction-coefficient = 100
hw-friction-coefficient.type = IntegerParameter
hw-friction-coefficient.help = Hanzen-Williams friction coefficient considered for the pipes in mm
hw-friction-coefficient.category = Network Model Parameters

peak-load-velocity = 2
peak-load-velocity.type = RealParameter
peak-load-velocity.help = Maximum velocity expected in pipes in m/s (Higher values result in smaller pipe diameters)
peak-load-velocity.category = Network Model Parameters

equivalent-length-factor = 0.2
equivalent-length-factor.type = RealParameter
equivalent-length-factor.help = fraction of pressure losses expected dues to accessories in the network (valid values within 0.0 and 0.6)
equivalent-length-factor.category = Network Model Parameters

peak-load-percentage = 100
peak-load-percentage.type = RealParameter
peak-load-percentage.help = Percentage of the peak demand in % to use for pipe sizing (valid values within 0 and 200)
peak-load-percentage.category = Network Model Parameters

network-lifetime = 20
network-lifetime.type = RealParameter
network-lifetime.help = Economic lifetime of the network in years
network-lifetime.category = Network Model Parameters

[plots]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of building names to generate plots (leave blank for all buildings).

building =
building.type = SingleBuildingParameter
building.help = Building ID for the Energy Demand, Comfort Plot and Heating Reset-schedule plot. Used only for the
                dashboard plots. For the plots tool, use a single building in the "buildings" variable.

categories = demand, solar_potentials, solar_technology, life_cycle_analysis, thermal_network
categories.type = MultiChoiceParameter
categories.choices = demand, solar_potentials, solar_technology, life_cycle_analysis, thermal_network
categories.help = List of plot categories to be created.

network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network: "DH" (district heating) or "DC" (district cooling).

network-name =
network-name.type = StringParameter
network-name.help = The name of the network to plot (defaults to an empty string).

plant-node =
plant-node.type = PlantNodeParameter
plant-node.network-type = plots:network-type
plant-node.network-name = plots:network-name
plant-node.help = The plant node to plot.

timeframe = monthly
timeframe.type = ChoiceParameter
timeframe.choices = hourly, daily, weekly, monthly, yearly
timeframe.help = Select one individual configuration of the supply system to visualize.

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy, surface area
normalization.help = Select normalization parameter

[plots-optimization]
generation =
generation.type = GenerationParameter
generation.help = Select one generation of the optimization routine to be plotted.

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy
normalization.help = Select normalization parameter

[plots-supply-system]
system = sys_2_15
system.type = SystemParameter
system.help = Select one system of the optimization routine where the supply system is going to be studied.
system.nullable = true

timeframe = monthly
timeframe.type = ChoiceParameter
timeframe.choices = hourly, daily, weekly, monthly, yearly
timeframe.help = Select one individual configuration of the supply system to visualize.

[plots-comparisons]
scenarios-and-systems = {general:scenario-name}_sys_today_
scenarios-and-systems.type = MultiSystemParameter
scenarios-and-systems.help = List of pairs of scenario and systems

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy, surface area
normalization.help = Select normalization parameter

[sewage]
heat-exchanger-length = 120
heat-exchanger-length.type = IntegerParameter
heat-exchanger-length.help = Length of pipeline available for a heat exchanger in the sewage in meters (at least 100 meters).
heat-exchanger-length.category = Advanced

sewage-water-ratio = 0.95
sewage-water-ratio.type = RealParameter
sewage-water-ratio.nullable = true
sewage-water-ratio.help = Ratio of decrease/increase in sewage water due to solids and water intakes.
sewage-water-ratio.category = Advanced

sewage-water-district = 50
sewage-water-district.type = RealParameter
sewage-water-district.help = How many liters of wastewater come from the neighboring districts through the heat-exchanger LPs
sewage-water-district.category = Advanced

[water-body]
max-water-volume-withdrawal = 1000
max-water-volume-withdrawal.type = RealParameter
max-water-volume-withdrawal.help = max water volume that can be withdrawn in m3/h
max-water-volume-withdrawal.category = Advanced

max-delta-temperature-withdrawal = 8
max-delta-temperature-withdrawal.type = RealParameter
max-delta-temperature-withdrawal.help = max delta of temperature that can be withdrawn in Celsius
max-delta-temperature-withdrawal.category = Advanced

temperature-max = 6
temperature-max.type = RealParameter
temperature-max.help  = maximum temperature of the water body during the year at the extraction point in Celsius
temperature-max.category = Advanced

temperature-min= 4
temperature-min.type = RealParameter
temperature-min.help = = average temperature of the water body during the year at the extraction point (it can be 30m) in Celsius
temperature-min.category = Advanced

[shallow-geothermal]
buildings-available =
buildings-available.type = BuildingsParameter
buildings-available.help = List of buildings whose footprint can be used for shallow geothermal exploration. Leave it blank to get all buildings area
buildings-available.category = Advanced

extra-area-available = 0.0
extra-area-available.type = RealParameter
extra-area-available.help = Add extra area where shallow geothermal probes can be installed in m2.
extra-area-available.category = Advanced

average-probe-depth = 10
average-probe-depth.type = RealParameter
average-probe-depth.help = Average depth of geothermal probes in m.
average-probe-depth.category = Advanced

[create-new-scenario]
project = cea-new-project
project.type = StringParameter
project.help = Name of the new project.

scenario = baseline
scenario.type = StringParameter
scenario.help = Name of the baseline scenario.

output-path = {general:scenario}/../..
output-path.type = PathParameter
output-path.help = Path to new project location.

zone = {general:scenario}/inputs/building-geometry/zone.shp
zone.type = FileParameter
zone.extensions = shp
zone.help = Path to geometry of the zone.

terrain = {general:scenario}/inputs/topography/terrain.tif
terrain.type = FileParameter
terrain.nullable = true
terrain.extensions = tif tiff
terrain.help = Path to the digital elevation model.

streets = {general:scenario}/inputs/networks/streets.shp
streets.type = FileParameter
streets.nullable = true
streets.extensions = shp
streets.help = Path to street geometry.

surroundings =
surroundings.type = FileParameter
surroundings.extensions = shp
surroundings.nullable = true
surroundings.help = Path to geometry of zone and surroundings (blank if shading effects are not considered).
surroundings.category = Optional

typology =
typology.type = FileParameter
typology.extensions = dbf
typology.nullable = true
typology.help = Path to typology database (blank if CEA should create one for you).
typology.category = Optional


[decentralized]

[network-layout]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network: "DH" (district heating), or "DC" (district cooling)

connected-buildings =
connected-buildings.type = BuildingsParameter
connected-buildings.help = List of buildings/customers to connect (blank if all buildings connected).

plant-buildings =
plant-buildings.type = ListParameter
plant-buildings.help = List of buildings where a plant is located (blank for plant to be created automatically at the anchor load).
possible-plant-sites.category = Advanced

pipe-diameter = 150
pipe-diameter.type = IntegerParameter
pipe-diameter.help = Nominal diameter of pipe in mm.
pipe-diameter.category = Advanced

type-mat = T1
type-mat.type = ChoiceParameter
type-mat.choices = T1, T2, T3
type-mat.help = Type of default material for piping.
type-mat.category = Advanced

allow-looped-networks = false
allow-looped-networks.type = BooleanParameter
allow-looped-networks.help = True if network loops should be created.
create-plant.category = Advanced

consider-only-buildings-with-demand = true
consider-only-buildings-with-demand.type = BooleanParameter
consider-only-buildings-with-demand.help = whether when creating networks ONLY buildings with energy demand should be considered or not. default is true
consider-only-buildings-with-demand.category = Advanced

algorithm = kou
algorithm.type = ChoiceParameter
algorithm.choices = kou, mehlhorn
algorithm.help = 'kou': Higher quality but slower. 'mehlhorn': Faster but less optimal (better for large networks). Reference: https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.approximation.steinertree.steiner_tree.html
algorithm.category = Steiner Tree Parameters

[multi-criteria]
generation = 3
generation.type = IntegerParameter
generation.help = Generation for which the multi-criteria analysis should be performed.

annualized-capital-costs = 0.4
annualized-capital-costs.type = RealParameter
annualized-capital-costs.help = Weight for total annualized costs (as part of economic sustainability).

total-capital-costs = 0.1
total-capital-costs.type = RealParameter
total-capital-costs.help = Weight factor for total investment costs (as part of economic sustainability).

annual-operation-costs = 0.1
annual-operation-costs.type = RealParameter
annual-operation-costs.help = Weight factor for operation costs (as part of economic sustainability).

annual-emissions = 0.4
annual-emissions.type = RealParameter
annual-emissions.help = Weight factor for emissions (as part of environmental sustainability).

[workflow]
workflow = district-heating-network
workflow.type = WorkflowParameter
workflow.help = Either a built-in workflow (located in cea/workflows) OR a path to a user-specified workflow YAML file

resume = off
resume.type = BooleanParameter
resume.help = Turn this parameter on to resume the workflow from the last successful step

resume-file =
resume-file.type = ResumeFileParameter
resume-file.extensions = yml
resume-file.direction = output
resume-file.help = Path to a file to store information on how to resume a workflow in case it doesn't run through
resume-file.category = Advanced

trace-input = off
trace-input.type = BooleanParameter
trace-input.help = If true, each step is run with the trace-inputlocator to collect info about locator methods

[rename-building]
old =
old.type = SingleBuildingParameter
old.help = The name of the building to rename

new =
new.type = StringParameter
new.help = The new name of the building (must be unique)

[create-mixed-use-type]
use-type = mixed_use
use-type.type = StringParameter
use-type.help = The name of the new use-type

metadata = mixed-use
metadata.type = StringParameter
metadata.help = Description for the new use-type

ratios = MULTI_RES|1.0
ratios.type = UseTypeRatioParameter
ratios.help = List of use type and ratio pairs (e.g. "MULTI_RES|0.5,SCHOOL|0.5")

[create-polygon]
coordinates = (-1, 0), (0, 1), (1, 0)
coordinates.type = CoordinateListParameter
coordinates.help = Comma-separated list of coordinate tuples i.e. (lat, lon) of the polygon

filename = polygon
filename.type = StringParameter
filename.help = Name to use for polygon shapefile outputs

[server]
project-root =
project-root.type = NullablePathParameter
project-root.help = Path to the root of all projects, assuming they are all stored in one location

protocol = http
protocol.type = ChoiceParameter
protocol.choices = http, https
protocol.help = The protocol to use (http / https)

host = 127.0.0.1
host.type = StringParameter
host.help = HOSTNAME of the CEA Server (the cea dashboard command will listen on this host, the GUI will connect on this port)

port = 5050
port.type = IntegerParameter
port.help = PORT of the CEA Server (the cea dashboard command will listen to this port, the GUI will connect on this port)

dev = false
dev.type = BooleanParameter
dev.help = Launch server in development mode (reloads on file changes)

[schemas]
locator-method = get_zone_geometry
locator-method.type = StringParameter
locator-method.help = the name of the locator-method to document

args = {}
args.type = JsonParameter
args.help = (optional) the arguments to pass to the locator-method (json dictionary)

[development]
nsis =
nsis.type = StringParameter
nsis.help = Path to the makensis.exe program (e.g. C:\Program Files (x86)\NSIS\Bin\makensis.exe)

conda =
conda.type = StringParameter
conda.help = Path to the conda.bat / conda.exe file (e.g. C:\Users\darthoma\Miniconda2\condabin\conda.bat)

gui =
gui.type = StringParameter
gui.help = Path to the repository for the GUI (e.g. c:\Users\darthoma\Documents\GitHub\CityEnergyAnalyst-GUI)

yarn =
yarn.type = StringParameter
yarn.help = Path to the yarn.cmd file (e.g. C:\Users\darthoma\AppData\Roaming\npm\yarn.cmd)

release-version =
release-version.type = StringParameter
release-version.help = Version number for new release in Semantic Versioning format (e.g., 1.0.0)

[plots-demand]

plot-title =
plot-title.type = StringParameter
plot-title.nullable = true
plot-title.help = Customise the plot title.

plot-type = bar_plot_grouped
plot-type.type = ChoiceParameter
plot-type.choices = bar_plot_group, bar_plot_stack, bar_plot_stack_percentage
plot-type.help = Select the type of plot.

buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings selected to plot. Leave blank when to select all. All buildings selected here = a district.

y-metric-to-plot = grid_electricity_consumption
y-metric-to-plot.type = MultiChoiceParameter
y-metric-to-plot.choices = grid_electricity_consumption, enduse_electricity_demand, enduse_cooling_demand, enduse_space_cooling_demand,	enduse_heating_demand, enduse_space_heating_demand,	enduse_dhw_demand
y-metric-to-plot.help = Select the metric(s) to plot for the Y-axis.

y-metric-unit = kWh
y-metric-unit.type = ChoiceParameter
y-metric-unit.choices = MWh, kWh, Wh
y-metric-unit.help = Select the unit of the metric to plot for the Y-axis.
y-metric-unit.category = Y-axis settings

y-normalised-by = gross_floor_area,
y-normalised-by.type = ChoiceParameter
y-normalised-by.choices = no_normalisation, gross_floor_area, conditioned_floor_area
y-normalised-by.help = Select the normalisation factor. The unit of area is m2.

y-min =
y-min.type = RealParameter
y-min.nullable = true
y-min.help = Set the minimum value for the Y-axis.
y-min.category = Y-axis settings

y-max =
y-max.type = RealParameter
y-max.nullable = true
y-max.help = Set the maximum value for the Y-axis.
y-max.category = Y-axis settings

y-step =
y-step.type = RealParameter
y-step.nullable = true
y-step.help = Set the step size for the Y-axis.
y-step.category = Y-axis settings

y-label =
y-label.type = StringParameter
y-label.nullable = true
y-label.help = Customise the label for the Y-axis.
y-label.category = Y-axis settings

x-to-plot = building
x-to-plot.type = ChoiceParameter
x-to-plot.choices = building, building_faceted_by_months, building_faceted_by_seasons, building_faceted_by_construction_type, building_faceted_by_main_use_type, district_and_hourly, district_and_hourly_faceted_by_months, district_and_hourly_faceted_by_seasons, district_and_daily, district_and_daily_faceted_by_months, district_and_daily_faceted_by_seasons, district_and_monthly, district_and_monthly_faceted_by_seasons, district_and_seasonally, district_and_annually_or_selected_period
x-to-plot.help = Select the column to plot on the X-axis.

facet-by-numbers-wrapped = 3
facet-by-numbers-wrapped.type = IntegerParameter
facet-by-numbers-wrapped.nullable = true
facet-by-numbers-wrapped.help = Number of columns or rows to wrap.
facet-by-numbers-wrapped.category = X-axis settings

facet-by-rows = False
facet-by-rows.type = BooleanParameter
facet-by-rows.help = True if faceting by rows. False if faceting by columns.
facet-by-rows.category = X-axis settings

x-sorted-by = by_default
x-sorted-by.type = ChoiceParameter
x-sorted-by.choices = default, construction_year, gross_floor_area, conditioned_floor_area, roof_area
x-sorted-by.help = Select the sorting method (from low to high) for the X-axis, when X-to-plot is set to by building choices.
x-sorted-by.category = X-axis settings

x-sorted-reversed = False
x-sorted-reversed.type = BooleanParameter
x-sorted-reversed.help = True to sort from high to low.
x-sorted-reversed.category = X-axis settings

x-label =
x-label.type = StringParameter
x-label.nullable = true
x-label.help = Customise the label for the X-axis.
x-label.category = X-axis settings

filter-buildings-by-year-start = 1900
filter-buildings-by-year-start.type = IntegerParameter
filter-buildings-by-year-start.nullable = true
filter-buildings-by-year-start.help = Enforce a filter to further select buildings built in or after this year. Leave blank to ignore the lower bound when filtering by the year of construction.
filter-buildings-by-year-start.category = Filter by building construction time, type and use type

filter-buildings-by-year-end = 2050
filter-buildings-by-year-end.type = IntegerParameter
filter-buildings-by-year-end.nullable = true
filter-buildings-by-year-end.help = Enforce a filter to further select buildings built in or before this year. Ensure year-end is the same or after year-start. Leave blank to ignore the upper bound when filtering by the year of construction.
filter-buildings-by-year-end.category = Filter by building construction time, type and use type

filter-buildings-by-construction-type =
filter-buildings-by-construction-type.type = ColumnMultiChoiceParameter
filter-buildings-by-construction-type.help = Enforce a filter to further select buildings by one or more construction_type archetypes. Leave blank to select all.
filter-buildings-by-construction-type.locator = get_database_archetypes_construction_type
filter-buildings-by-construction-type.column = const_type
filter-buildings-by-construction-type.category = Filter by building construction time, type and use type

filter-buildings-by-use-type =
filter-buildings-by-use-type.type = ColumnMultiChoiceParameter
filter-buildings-by-use-type.help = Enforce a filter to further select buildings by one or more use_type (archetypes). For mixed-use buildings, CEA filers by the main use (i.e., the use type with the highest ratio among all use types of a building). Leave blank to select all.
filter-buildings-by-use-type.locator = get_database_archetypes_use_type
filter-buildings-by-use-type.column = use_type
filter-buildings-by-use-type.category = Filter by building construction time, type and use type

min-ratio-as-main-use = 0
min-ratio-as-main-use.type= RealParameter
min-ratio-as-main-use.help= Set the minimum threshold (inclusive) for a use type to be considered as the main use of a building. A valid value ranges from 0 to 1.
min-ratio-as-main-use.category = Filter by building construction time, type and use type


