[general]
scenario = C:/reference-case-open/baseline
scenario.type = PathParameter
scenario.help = Select the path to the scenario to run

region = CH
region.type = ChoiceParameter
region.choices = CH, SIN, custom
region.help = Region to use for the databases (either CH or SIN) - set to "custom" if you want to edit them

weather = Zug
weather.type = WeatherPathParameter
weather.help = Either a full path to a weather file or the name of one of the weather files shipped with the CEA

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = Multiprocessing for quicker calculation, if available.

number-of-CPUs-to-keep-free = 1
number-of-CPUs-to-keep-free.type = IntegerParameter
number-of-CPUs-to-keep-free.help = Limits the maximum number of processors to use for multiprocessing. Default keeps one CPU free.
number-of-CPUs-to-keep-free.category = Advanced

debug = false
debug.type = BooleanParameter
debug.help = Enable debugging-specific behaviors.
degub.category = Advanced

[data-helper]
archetypes = comfort, architecture, HVAC, internal-loads, supply, restrictions
archetypes.type = MultiChoiceParameter
archetypes.choices = comfort, architecture, HVAC, internal-loads, supply, restrictions
archetypes.help = List of input databases to create.

[radiation-daysim]
buildings =
buildings.type = ListParameter
buildings.help = List of buildings to run the simulation for. Leave it blank to simulate all buildings

n-buildings-in-chunk = 100
n-buildings-in-chunk.type = IntegerParameter
n-buildings-in-chunk.help =  Min number of groups of buildings sent for multiprocessing

roof-grid = 10
roof-grid.type = IntegerParameter
roof-grid.help =  use 200 (maximum) if you want only one point per surface
roof-grid.category = Resolution

walls-grid = 200
walls-grid.type = IntegerParameter
walls-grid.help = use 200 (maximum) if you want only one point per surface
walls-grid.category = Resolution

zone-geometry = 2
zone-geometry.type = IntegerParameter
zone-geometry.help = Level of simplification of the zone geometry (1 is the lowest)
zone-geometry.category = Geometry simplification

surrounding-geometry = 5
surrounding-geometry.type = IntegerParameter
surrounding-geometry.help = Level of simplification of the district geometry (1 is the lowest)
surrounding-geometry.category = Geometry simplification

consider-floors = true
consider-floors.type = BooleanParameter
consider-floors.help = Consider floors in the geometry
consider-floors.category = Resolution

rad-ab = 4
rad-ab.type = IntegerParameter
rad-ab.help = Number of ambient bounces
rad-ab.category = Daysim simulation parameters

rad-ad = 512
rad-ad.type = IntegerParameter
rad-ad.help = Number of ambient divisions
rad-ad.category = Daysim simulation parameters

rad-as = 32
rad-as.type = IntegerParameter
rad-as.help = Number of ambient super-samples
rad-as.category = Daysim simulation parameters

rad-ar = 20
rad-ar.type = IntegerParameter
rad-ar.help = Ambient resolution
rad-ar.category = Daysim simulation parameters

rad-aa = 0.15
rad-aa.type = RealParameter
rad-aa.help = Ambient accurracy
rad-aa.category = Daysim simulation parameters

rad-lr = 8
rad-lr.type = IntegerParameter
rad-lr.help = Maximum number of reflections
rad-lr.category = Daysim simulation parameters

rad-st = 0.5
rad-st.type = RealParameter
rad-st.help = Specular sampling threshold
rad-st.category = Daysim simulation parameters

rad-sj = 0.7
rad-sj.type = RealParameter
rad-sj.help = Specular sampling jitter
rad-sj.category = Daysim simulation parameters

rad-lw = 0.05
rad-lw.type = RealParameter
rad-lw.help = Minimum weight of each ray
rad-lw.category = Daysim simulation parameters

rad-dj = 0.7
rad-dj.type = RealParameter
rad-dj.help = Direct jitter
rad-dj.category = Daysim simulation parameters

rad-ds = 0
rad-ds.type = RealParameter
rad-ds.help = Direct sampling ration
rad-ds.category = Daysim simulation parameters

rad-dr = 0
rad-dr.type = IntegerParameter
rad-dr.help = Number of relays from secondary sources
rad-dr.category = Daysim simulation parameters

rad-dp = 32
rad-dp.type = IntegerParameter
rad-dp.help = Secondary source presampling density
rad-dp.category = Daysim simulation parameters

albedo = 0.2
albedo.type = RealParameter
albedo.help = Reflection for the terrain
albedo.category = Daysim simulation parameters

[demand]
buildings =
buildings.type = ListParameter
buildings.help = a list of buildings to run the simulation for - leave blank to simulate all buildings
buildings.category = Advanced

loads-output =
loads-output.type = MultiChoiceParameter
loads-output.choices = PV, GRID, E_sys, Eal, Edata, Epro, Eaux,E_ww, E_hs, E_cs, E_cre, E_cdata,Qhs_sen_shu, Qhs_sen_ahu, Qhs_lat_ahu,Qhs_sen_aru, Qhs_lat_aru, Qhs_sen_sys,Qhs_lat_sys, Qhs_em_ls, Qhs_dis_ls,Qhs_sys_shu, Qhs_sys_ahu, Qhs_sys_aru,Qcs_sys_scu, Qcs_sys_ahu, Qcs_sys_aru,DH_hs, Qhs_sys, Qhs,DH_ww, Qww_sys, Qww,DC_cs, Qcs_sys, Qcs,DC_cre, Qcre_sys, Qcre,DC_cdata, Qcdata_sys, Qcdata,NG_hs,COAL_hs,OIL_hs,WOOD_hs,SOLAR_hs,NG_ww,COAL_ww,OIL_ww,WOOD_ww,SOLAR_ww,Qcs_sen_scu, Qcs_sen_ahu,Qcs_lat_ahu, Qcs_sen_aru, Qcs_lat_aru,Qcs_sen_sys, Qcs_lat_sys, Qcs_em_ls,Qcs_dis_ls, Qhpro_sys,QH_sys, QC_sys
loads-output.help = a list of loads to run the simulation for - leave blank to simulate all loads in demand_writers
loads-output.category = Advanced

massflows-output =
massflows-output.type = MultiChoiceParameter
massflows-output.choices = mcpww_sys,mcptw,mcpcs_sys,mcphs_sys,mcpcs_sys_ahu,mcpcs_sys_aru,mcpcs_sys_scu,mcphs_sys_ahu,mcphs_sys_aru,mcphs_sys_shu,mcpcre_sys,mcpcdata_sys
massflows-output.help = a list of massflowrates to run the simulation for - leave blank to simulate all massflows in demand_writers
massflows-output.category = Advanced

temperatures-output =
temperatures-output.type = MultiChoiceParameter
temperatures-output.choices =  T_int, T_ext, theta_o, Tww_sys_sup, Tww_sys_re, Tcre_sys_re, Tcre_sys_sup,Tcdata_sys_re, Tcdata_sys_sup,Ths_sys_sup_aru, Ths_sys_sup_ahu, Ths_sys_sup_shu,Ths_sys_re_aru, Ths_sys_re_ahu, Ths_sys_re_shu, Tcs_sys_sup_aru, Tcs_sys_sup_ahu, Tcs_sys_sup_scu, Tcs_sys_re_aru, Tcs_sys_re_ahu, Tcs_sys_re_scu, Ths_sys_sup, Ths_sys_re, Tcs_sys_sup, Tcs_sys_re
temperatures-output.help = a list of temperatures to run the simulation for - leave blank to simulate all temperatures in demand_writers
temperatures-output.category = Advanced

resolution-output = hourly
resolution-output.type = ChoiceParameter
resolution-output.choices = hourly, monthly
resolution-output.help = resolution of output demand.
resolution-output.category = Advanced

format-output = csv
format-output.type = ChoiceParameter
format-output.choices = csv, hdf5
format-output.help = format of output files. csv is the default, HDF5 is used when data needs to be compressed.
format-output.category = Advanced

use-dynamic-infiltration-calculation = false
use-dynamic-infiltration-calculation.type = BooleanParameter
use-dynamic-infiltration-calculation.help = Use the dynamic infiltration calculation (slower!)
use-dynamic-infiltration-calculation.category = Advanced

use-daysim-radiation = true
use-daysim-radiation.type = BooleanParameter
use-daysim-radiation.help = set to false to use ArcGIS radiation as input, default is true
use-daysim-radiation.category = Advanced

use-stochastic-occupancy = false
use-stochastic-occupancy.type = BooleanParameter
use-stochastic-occupancy.help = set to true to use stochastic occupancy schedules, default is false
use-stochastic-occupancy.category = Advanced

override-variables = false
override-variables.type = BooleanParameter
override-variables.help = set to true to use overrides file stored in building_measurements, default is false
override-variables.category = Advanced

[heatmaps]
file-to-analyze = {general:scenario}/outputs/data/demand/Total_demand.csv
file-to-analyze.type = PathParameter
file-to-analyze.help = file name to analyze

analysis-fields = Qcs_MWhyr, Qhs_MWhyr
analysis-fields.type = ListParameter
analysis-fields.help = space-separated list of columns in the file to analyze

[emissions]
year-to-calculate = 2020
year-to-calculate.type = IntegerParameter
year-to-calculate.help = The year to base the calculations on for embodied emissions.

[scenario-plots]
project = {general:scenario}/..
project.type = PathParameter
project.help = Path to the folder containing the scenarios

scenarios = baseline, scenario1, scenario2
scenarios.type = SubfoldersParameter
scenarios.parent = {scenario-plots:project}
scenarios.help = List of scenarios to plot (subdirectories of the project)

output-file = {scenario-plots:project}/scenario-plots.pdf
output-file.type = FileParameter
output-file.extensions = pdf
output-file.direction = output
output-file.help = Path of the output pdf file to create

[benchmark-graphs]
project = {general:scenario}/..
project.type = PathParameter
project.help = Path to the folder containing the scenarios

scenarios = baseline, scenario1, scenario2
scenarios.type = SubfoldersParameter
scenarios.parent = {benchmark-graphs:project}
scenarios.help = List of scenarios to plot (subdirectories of the project)

output-file = {benchmark-graphs:project}/benchmark-graphs.pdf
output-file.type = FileParameter
output-file.extensions = pdf
output-file.direction = output
output-file.help = Path of the output pdf file to create

[extract-reference-case]
destination = C:/
destination.type = PathParameter
destination.help = destination folder to extract the reference case to. Since the reference case has subfolders, the
                   resulting scenario for the default (``C:/``) will be: ``C:/reference-case-open/baseline``.

[radiation]
latitude =
latitude.type = RealParameter
latitude.nullable = true
latitude.help = latitude of the project - leave blank to calculate the latitude from the shape files

longitude =
longitude.type = RealParameter
longitude.nullable = true
longitude.help = longitude of the project - leave blank to calculate the longitude from the shape files

year =  2014
year.type = IntegerParameter
year.help = the year to calculate radiation for

[solar]
type-pvpanel = PV1
type-pvpanel.type = ChoiceParameter
type-pvpanel.choices = PV1, PV2, PV3
type-pvpanel.help = Type of PV panel

type-scpanel = FP
type-scpanel.type = ChoiceParameter
type-scpanel.choices = FP, ET
type-scpanel.help = Type of solar collector: Flate-plate (FP) or Evacuated-tubes (ET)

panel-on-roof = True
panel-on-roof.type = BooleanParameter
panel-on-roof.help = Install panels on roofs

panel-on-wall = True
panel-on-wall.type = BooleanParameter
panel-on-wall.help = Install panels on walls

annual-radiation-threshold = 800000
annual-radiation-threshold.type = RealParameter
annual-radiation-threshold.help = Install panels on surfaces that receive radiation above this threshold [Wh/m2/yr].

t-in-sc =
t-in-sc.type = RealParameter
t-in-sc.help = Inlet temperature of solar collectors [C]
t-in-sc.nullable = true
t-in-sc.category = Advanced

t-in-pvt =
t-in-pvt.type = RealParameter
t-in-pvt.help = Inlet temperature of PVT panels [C]
t-in-pvt.nullable = true
t-in-pvt.category = Advanced

solar-window-solstice = 4
solar-window-solstice.type = IntegerParameter
solar-window-solstice.help = Desired hours of solar window on the solstice [hr]
solar-window-solstice.category = Advanced

[retrofit-potential]
keep-partial-matches = true
keep-partial-matches.type = BooleanParameter
keep-partial-matches.help = keep buildings that attained one or more of the criteria

retrofit-scenario-name = retrofit-HVAC
retrofit-scenario-name.type = StringParameter
retrofit-scenario-name.help = the name of the scenario to create (will be placed in same parent folder as the scenario

retrofit-target-year = 2020
retrofit-target-year.type = IntegerParameter
retrofit-target-year. help = Year to calculate for
retrofit-target-year.category = age

age-threshold = 15
age-threshold.type = IntegerParameter
age-threshold.nullable = true
age-threshold.help = Threshold age of HVAC (built / retrofitted)
age-threshold.category = age

eui-heating-threshold = 150
eui-heating-threshold.type = RealParameter
eui-heating-threshold.nullable = true
eui-heating-threshold.help = EUI heating loads threshold, leave blank to ignore these criteria
eui-heating-threshold.category = end use intensity

eui-hot-water-threshold = 50
eui-hot-water-threshold.type = RealParameter
eui-hot-water-threshold.nullable = true
eui-hot-water-threshold.help = EUI hot-water loads threshold, leave blank to ignore these criteria
eui-hot-water-threshold.category = end use intensity

eui-cooling-threshold = 4
eui-cooling-threshold.type = RealParameter
eui-cooling-threshold.nullable = true
eui-cooling-threshold.help = EUI cooling loads threshold, leave blank to ignore these criteria
eui-cooling-threshold.category = end use intensity

eui-electricity-threshold = 20
eui-electricity-threshold.type = RealParameter
eui-electricity-threshold.nullable = true
eui-electricity-threshold.help = EUI electricity consumption threshold, leave blank to ignore theseb criteria
eui-electricity-threshold.category = end use intensity

emissions-operation-threshold = 30
emissions-operation-threshold.type = RealParameter
emissions-operation-threshold.nullable = true
emissions-operation-threshold.help = Operations emissions threshold, leave blank to ignore these criteria
emissions-operation-threshold.category = emissions

heating-costs-threshold = 2
heating-costs-threshold.type = RealParameter
heating-costs-threshold.nullable = true
heating-costs-threshold.help = Heating costs threshold, leave blank to ignore these criteria
heating-costs-threshold.category = operation costs

hot-water-costs-threshold = 2
hot-water-costs-threshold.type = RealParameter
hot-water-costs-threshold.nullable = true
hot-water-costs-threshold.help = Hot-water costs threshold, leave blank to ignore these criteria
hot-water-costs-threshold.category = operation costs

cooling-costs-threshold = 2
cooling-costs-threshold.type = RealParameter
cooling-costs-threshold.nullable = true
cooling-costs-threshold.help = Cooling costs threshold, leave blank to ignore these criteria
cooling-costs-threshold.category = operation costs

electricity-costs-threshold = 2
electricity-costs-threshold.type = RealParameter
electricity-costs-threshold.nullable = true
electricity-costs-threshold.help = Electricity costs threshold, leave blank to ignore these criteria
electricity-costs-threshold.category = operation costs

heating-losses-threshold = 15
heating-losses-threshold.type = RealParameter
heating-losses-threshold.nullable = true
heating-losses-threshold.help = Heating losses threshold, leave blank to ignore these criteria
heating-losses-threshold.category = HVAC System losses

hot-water-losses-threshold = 15
hot-water-losses-threshold.type = RealParameter
hot-water-losses-threshold.nullable = true
hot-water-losses-threshold.help = Hot-water losses threshold, leave blank to ignore these criteria
hot-water-losses-threshold.category = HVAC System losses

cooling-losses-threshold = 15
cooling-losses-threshold.type = RealParameter
cooling-losses-threshold.nullable = true
cooling-losses-threshold.help = Cooling losses threshold, leave blank to ignore these criteria
cooling-losses-threshold.category = HVAC System losses

[sensitivity-demand]
method = sobol
method.type = ChoiceParameter
method.choices = morris, sobol
method.help = Method to use valid values: "morris", "sobol"

num-samples = 1000
num-samples.type = IntegerParameter
num-samples.help = number of samples (generally 1000 or until it converges)

calc-second-order = false
calc-second-order.type = BooleanParameter
calc-second-order.help = (sobol) calc_second_order parameter

grid-jump = 2
grid-jump.type = IntegerParameter
grid-jump.help = (morris) grid_jump parameter

num-levels = 4
num-levels.type = IntegerParameter
num-levels.help = (morris) num_levels parameter

samples-folder = {general:scenario}/../samples
samples-folder.type = PathParameter
samples-folder.direction = input
samples-folder.help = folder to place the output files (samples.npy, problem.pickle) in

variable-groups = ENVELOPE, INDOOR_COMFORT, INTERNAL_LOADS
variable-groups.type = MultiChoiceParameter
variable-groups.choices = ENVELOPE, INDOOR_COMFORT, INTERNAL_LOADS, SYSTEMS ECONOMIC
variable-groups.help = List of variable groups to sample (see uncertainty_distributions.xls file)

sample-index = 0
sample-index.help=Zero-based index into the samples list to simulate
sample-index.type=IntegerParameter

number-of-simulations =
number-of-simulations.type = IntegerParameter
number-of-simulations.nullable = true
number-of-simulations.help = number of simulations to perform, leave empty to simulate all

simulation-folder = {general:scenario}/../simulation
simulation-folder.type = PathParameter
simulation-folder.direction = output
simulation-folder.help = folder to copy the reference case to for simulation

output-parameters = Qcs_sys_MWhyr, Qhs_sys_MWhyr, E_sys_MWhyr, Qhs_sys0_kW, Qcs_sys0_kW, E_sys0_kW
output-parameters.type = MultiChoiceParameter
output-parameters.choices = Qcs_sys_MWhyr, Qhs_sys_MWhyr, E_sys_MWhyr, Qhs_sys0_kW, Qcs_sys0_kW, E_sys0_kW
output-parameters.help = output parameters to use

temporal-scale = yearly
temporal-scale.type = ChoiceParameter
temporal-scale.choices = yearly, monthly
temporal-scale.help = temporal scale of analysis (monthly or yearly)

[dbf-tools]
# configuration for tools like excel-to-dbf and dbf-to-excel
excel-file = {general:scenario}/inputs/building-properties/technical_systems.xls
excel-file.type = FileParameter
excel-file.extensions = xls xlsx
excel-file.help = Path to the Excel file

dbf-file = C:/reference-case-open/baseline/inputs/building-properties/technical_systems.dbf
dbf-file.type = FileParameter
dbf-file.extensions = dbf
dbf-file.help = Path to the DBF file

[shapefile-tools]
# configuration for tools like excel-to-shp and shp-to-excel
excel-file = {general:scenario}/inputs/building-geometry/zone.xls
excel-file.type = FileParameter
excel-file.extensions = xls xlsx
excel-file.help = Path to the Excel file

shapefile = {general:scenario}/inputs/building-geometry/zone.shp
shapefile.type = FileParameter
shapefile.extensions = shp
shapefile.help = Path to the ESRI Shapefile

crs = {"lon_0": 7.439583333333333, "k_0": 1, "ellps": "bessel", "y_0": 200000, "no_defs": true, "proj": "somerc", "x_0": 600000, "units": "m", "lat_0": 46.95240555555556}
crs.type = JsonParameter
crs.help = contains the value to use for the crs parameter of the shapefile

index = Name
index.type = StringParameter
index.help = Use this column as the index column of the DataFrame

polygon = True
polygon.type = BooleanParameter
polygon.help = Interpret geometry column as polygon coordinates - set to False to interpret as polyline

[test]
reference-cases = open
reference-cases.type = MultiChoiceParameter
reference-cases.choices = open, zug/baseline, zurich/baseline, zurich/masterplan, all
reference-cases.help = List of reference cases to run - check cea/tests/dodo.py@REFERENCE_CASES for the full list

tasks = all
tasks.type = MultiChoiceParameter
tasks.choices = all, download_radiation, download_reference_cases, run_calibration, run_data_helper, run_demand,
                run_embodied_energy, run_emissions_mobility, run_emissions_operation, run_heatmaps, run_scenario_plots,
                run_sensitivity, run_thermal_network_matrix, run_unit_tests
tasks.help = list of tasks to run - use "all" to run all tasks
tasks.category = Advanced

verbosity = 1
verbosity.type = IntegerParameter
verbosity.help = verbosity parameter to pass to pydoit
verbosity.category = Advanced

[trace-inputlocator]
scripts = data-helper, demand, emissions
scripts.type = MultiChoiceParameter
scripts.choices = benchmark-graphs, compile, config-editor, create-new-project, data-helper, dbf-to-excel,
                  decentralized, demand, embodied-energy, emissions, excel-to-dbf, excel-to-shapefile,
                  extract-reference-case, heatmaps, install-grasshopper, install-toolbox, lake-potential,
                  list-demand-graphs-fields, mobility, network-layout, operation-costs, optimization, photovoltaic,
                  photovoltaic-thermal, plots, radiation, radiation-daysim, retrofit-potential, scenario-plots,
                  sensitivity-demand-analyze, sensitivity-demand-samples, sensitivity-demand-simulate,
                  sewage-potential, shapefile-to-excel, solar-collector, thermal-network-matrix
scripts.help = sequential list of scripts to run

graphviz-output-file = {general:scenario}/outputs/trace_inputlocator.output.gv
graphviz-output-file.type = FileParameter
graphviz-output-file.extensions = gv
graphviz-output-file.help = Path to the filename of the GraphViz output file

yaml-output-file = {general:scenario}/outputs/trace_inputlocator.output.yml
yaml-output-file.type = FileParameter
yaml-output-file.extensions = yml
yaml-output-file.help = Path to the filename of the YAML output file


[neural-network]

year = 2015
year.type = IntegerParameter
year.help = The year to base the calculations on. WARNING!, make sure you are using a compatible weather file

warmup-period = 759
warmup-period.type = IntegerParameter
warmup-period.help = Burn-inperiod for estimation of cea demand calcualtion. In hours taken from the end of the year.

nn-delay = 1
nn-delay.type = IntegerParameter
nn-delay.help = number of delays. the recommended value is 1

nn-passes = 3
nn-passes.type = IntegerParameter
nn-passes.help = number of recommended pases is 20

number-samples-scaler = 3
number-samples-scaler.type = IntegerParameter
number-samples-scaler.help = Number of generations of the city. The recommended is 200 but it is a function of the number of features.

number-samples = 3
number-samples.type = IntegerParameter
number-samples.help = 3 The recomended is 10, it is a function of the ram we have, in this case each sample requires 1GB of ram.

number-sweeps=3
number-sweeps.type = IntegerParameter
number-sweeps.help = the recommended is 10

autoencoder = false
autoencoder.type = BooleanParameter
autoencoder.help = only true if you have more than 70 features and enough ram.

boolean-vars = ECONOMIZER, WIN_VENT, MECH_VENT, HEAT_REC, NIGHT_FLSH
boolean-vars.type = ListParameter
boolean-vars.help = Name of features that are not float numbers (instead are classes) and should have Boolean properties

climatic-variables = drybulb_C, wetbulb_C, relhum_percent, glohorrad_Whm2, dirnorrad_Whm2, difhorrad_Whm2, skytemp_C, windspd_ms
climatic-variables.type = ListParameter
climatic-variables.help = features selected from the weather data file

random-variables = win_wall, Cm_Af, n50, U_roof, a_roof, U_wall, a_wall, U_base, U_win, G_win, rf_sh,
                   Ths_set_C, Tcs_set_C, Ths_setb_C, Tcs_setb_C, Ve_lps, Qs_Wp, X_ghp, Ea_Wm2, El_Wm2,
                   Vww_lpd, Vw_lpd, dThs_C, dTcs_C, ECONOMIZER, WIN_VENT, MECH_VENT, HEAT_REC, NIGHT_FLSH, dT_Qhs,
                   dT_Qcs
random-variables.type = ListParameter
random-variables.help = Features that are subject to uncertainty, and therefore, random sampling

target-parameters = Qhs_sys_kWh, Qcs_sys_kWh, Qww_sys_kWh, E_sys_kWh, T_int_C
target-parameters.type = ListParameter
target-parameters.help = parameters intended for estimation by the neural network

[single-calibration]
variables = U_win, U_wall, U_roof, n50, Tcs_set_C, Hs
variables.type = MultiChoiceParameter
variables.choices = U_win, U_wall, U_base, U_roof, Tcs_setb_C, Ths_setb_C, G_win, n50, Hs, Cm_Af, Ths_set_C, win_wall, Tcs_set_C, Ea_Wm2, El_Wm2, Vww_lpd, Vw_lpd
variables.help = a list of input variables to calibrate to (they refer to the variable names included in the distributions database of CEA)
variables.category = Advanced

building = B01
building.type = StringParameter
building.help = Building to calbratebuilding.choices =
building.category = Advanced

load = E_sys
load.type = ChoiceParameter
load.choices = PV, GRID, E_sys, Eal, Edata, Epro, Eaux,E_ww, E_hs, E_cs, E_cre, E_cdata,Qhs_sen_shu, Qhs_sen_ahu, Qhs_lat_ahu,Qhs_sen_aru, Qhs_lat_aru, Qhs_sen_sys,Qhs_lat_sys, Qhs_em_ls, Qhs_dis_ls,Qhs_sys_shu, Qhs_sys_ahu, Qhs_sys_aru,Qcs_sys_scu, Qcs_sys_ahu, Qcs_sys_aru,DH_hs, Qhs_sys, Qhs,DH_ww, Qww_sys, Qww,DC_cs, Qcs_sys, Qcs,DC_cre, Qcre_sys, Qcre,DC_cdata, Qcdata_sys, Qcdata,NG_hs,COAL_hs,OIL_hs,WOOD_hs,SOLAR_hs,NG_ww,COAL_ww,OIL_ww,WOOD_ww,SOLAR_ww,Qcs_sen_scu, Qcs_sen_ahu,Qcs_lat_ahu, Qcs_sen_aru, Qcs_lat_aru,Qcs_sen_sys, Qcs_lat_sys, Qcs_em_ls,Qcs_dis_ls, Qhpro_sys,QH_sys, QC_sys
load.help = The load to calibrate to.
load.category = Advanced

samples = 1000
samples.type = IntegerParameter
samples.help =  number of samples to do to use cea.
samples.category = Grid for the sensors in the roof

iterations = 10000
iterations.type = IntegerParameter
iterations.help =  number of samples to do to use cea.
iterations.category = MCMC iterations for calibration. >10000 recommended

show-plots = true
show-plots.type = BooleanParameter
show-plots.help = Set to false to disable showing the plots

[thermal-network]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = type of network used, based on the region, for Switzerland it is DH, for Singapore it is DC

network-names =
network-names.type = ListParameter
network-names.help = a list of networks of a network type
network-names.category = Advanced

file-type = shp
file-type.type = ChoiceParameter
file-type.choices = csv, shp
file-type.help = format of the input files, it can be either csv file or a shape file

set-diameter = true
set-diameter.type = BooleanParameter
set-diameter.help = this does a rule of max and min flow to set a diameter. if false it takes the input diameters

load-max-edge-flowrate-from-previous-run = false
load-max-edge-flowrate-from-previous-run.type = BooleanParameter
load-max-edge-flowrate-from-previous-run.help = set to true to bypass the calc_max_edge_flowrate function and just load
                                                the results from the previous run. (useful for debugging)
load-max-edge-flowrate-from-previous-run.category = Advanced

start-t = 0
start-t.type = IntegerParameter
start-t.help = starting hour for calculations (0-based)
start-t.category = Advanced

stop-t = 8760
stop-t.type = IntegerParameter
stop-t.help = stopping hour for calculations (0-based, upper bound)
stop-t.category = Advanced

use-representative-week-per-month = false
use-representative-week-per-month.type = BooleanParameter
use-representative-week-per-month.help = activing this function will run the thermal network with data of the first
                                      week of each month instead of the full month data
use-representative-week-per-month.category = Advanced

minimum-mass-flow-iteration-limit = 30
minimum-mass-flow-iteration-limit.type = IntegerParameter
minimum-mass-flow-iteration-limit.help = maximum amount of iterations allowed for the increase of minimum mass flows in the network
minimum-mass-flow-iteration-limit.category = Advanced

minimum-edge-mass-flow = 0.1
minimum-edge-mass-flow.type = RealParameter
minimum-edge-mass-flow.help = minimum network allowed in network without mass flow iteration attempting to raise values in kg per s
minimum-edge-mass-flow.category = Advanced

diameter-iteration-limit = 10
diameter-iteration-limit.type = IntegerParameter
diameter-iteration-limit.help = maximum amount of iterations allowed for the network diameter iteration. relevant for looped network result convergence.
diameter-iteration-limit.category = Advanced

[optimization]
initialind = 3
initialind.type = IntegerParameter
initialind.help = this denotes the number of individuals at the start of the optimization (parameter for genetic algorithm)

halloffame = 20
halloffame.type = IntegerParameter
halloffame.help = this denotes the number of individuals to be stored in hall of fame

ngen = 3
ngen.type = IntegerParameter
ngen.help = number of generations in the optimization (parameter for genetic algorithm)

fcheckpoint = 1
fcheckpoint.type = IntegerParameter
fcheckpoint.help = frequency for the saving of checkpoints

maxtime = 604800
maxtime.type = IntegerParameter
maxtime.help = maximum allowed time in seconds, 604800 is equivalent of 7 days

iscooling = false
iscooling.type = BooleanParameter
iscooling.help = if centralized cooling is required in the neighborhood.

isheating = true
isheating.type = BooleanParameter
isheating.help = if centralized heating is required in the neighborhood.

[plots]
scenarios = baseline, scenario_A, scenario_B
scenarios.type = SubfoldersParameter
scenarios.parent = {general:scenario}/..
scenarios.help = Path to scenarios to run for comparison graphs

buildings =
buildings.type = BuildingsParameter
buildings.help = a list of buildings to run graphs or leave blank to simulate district

categories = solar_potentials, solar_technology_potentials, energy_demand, optimization, life_cycle, scenarios_comparisons, thermal_network
categories.type = MultiChoiceParameter
categories.choices = solar_potentials, solar_technology_potentials, energy_demand, optimization, life_cycle, scenarios_comparisons, thermal_network
categories.help = a list of categories of plots to create

generations = 1, 2, 3
generations.type = ListParameter
generations.help = a list of generations to run the optimization graphs for, leave empty to run the last two checkpoints

individual = ind1
individual.type = StringParameter
individual.help = one individual in the last generation to run the individual graphs for. Values start from 0

network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DC, DH
network-type.help = a string indication DC or DH for District Cooling or Heating

network-names =
network-names.type = ListParameter
network-names.help = a list of networks


[sewage]
heat-exchanger-length = 120
heat-exchanger-length.type = IntegerParameter
heat-exchanger-length.help = length of pipeline available for a heat exchanger in the sewage in meters. You need at least 100 meters.

sewage-water-ratio = 0.95
sewage-water-ratio.type = RealParameter
sewage-water-ratio.nullable = true
sewage-water-ratio.help = ratio of decrease/increase in sewage water due to solids and also water intakes.

[lake]
available = false
available.type = BooleanParameter
available.help = if a lake is available in the area.

size = 0
size.type = IntegerParameter
size.help = size of the lake.

[create-new-project]
project = cea-new-project
project.type = StringParameter
project.help = name of the project

scenario = baseline
scenario.type = StringParameter
scenario.help = name of scenario

occupancy-types = MULTI_RES, OFFICE, RETAIL
occupancy-types.type = MultiChoiceParameter
occupancy-types.choices = HOTEL, COOLROOM, PARKING, SCHOOL, OFFICE, GYM, HOSPITAL, INDUSTRIAL, RETAIL, RESTAURANT, SINGLE_RES, MULTI_RES, SERVERROOM, SWIMMING, FOODSTORE, LIBRARY
occupancy-types.help = A list of occupancy types to include in the project
occupancy-types.category = Advanced

zone = {general:scenario}/inputs/building-geometry/zone.shp
zone.type = FileParameter
zone.extensions = shp
zone.help = Path to the filename including geometry properties of buildings.

district =
district.type = FileParameter
district.extensions = shp
district.nullable = true
district.help = Path to the filename including geometry properties of buildings and surroundings. Leave empty if you do not want to consider shading effects.

terrain = {general:scenario}/inputs/topography/terrain.tif
terrain.type = FileParameter
terrain.extensions = tif tiff
terrain.help = Path to the filename including a digital elevation model of the terrain

streets =
streets.type = FileParameter
streets.extensions = shp
streets.nullable = true
streets.help = Path to the filename including geometry streets. Leave empty if you do not want to optimize a district heating or cooling network

output-path = {general:scenario}/../..
output-path.type = PathParameter
output-path.help = Path to location where to store the new project

[disconnected-cooling]
AHUflag = false
AHUflag.type = BooleanParameter
AHUflag.help = this is a configuration flag, which influences the disconnected building calculations

ARUflag = false
ARUflag.type = BooleanParameter
ARUflag.help = this is a configuration flag, which influences the disconnected building calculations

SCUflag = false
SCUflag.type = BooleanParameter
SCUflag.help = this is a configuration flag, which influences the disconnected building calculations

AHUARUflag = false
AHUARUflag.type = BooleanParameter
AHUARUflag.help = this is a configuration flag, which influences the disconnected building calculations

AHUSCUflag = false
AHUSCUflag.type = BooleanParameter
AHUSCUflag.help = this is a configuration flag, which influences the disconnected building calculations

ARUSCUflag = false
ARUSCUflag.type = BooleanParameter
ARUSCUflag.help = this is a configuration flag, which influences the disconnected building calculations

[network-layout]
network-type = DC
network-type.type = ChoiceParameter
network-type.choices = DC, DH, custom
network-type.help = a string indication DC or DH for District Cooling or Heating

pipe-diameter = 150
pipe-diameter.type = IntegerParameter
pipe-diameter.help = nominal diameter of pipe in mm.
pipe-diameter.category = Advanced

type-mat = T1
type-mat.type = ChoiceParameter
type-mat.choices = T1, T2, T3
type-mat.help = type of default material for piping
type-mat.category = Advanced

create-plant = true
create-plant.type = BooleanParameter
create-plant.help = whether creating a plant close to the highest energy consumer or not. default is True
create-plant.category = Advanced

allow-looped-networks = false
allow-looped-networks.type = BooleanParameter
allow-looped-networks.help = whether when creating networks loops should be created. default is False
create-plant.category = Advanced