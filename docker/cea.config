[general]
project = /projects
scenario-name = heating
scenario = {general:project}/{general:scenario-name}
multiprocessing = true
number-of-cpus-to-keep-free = 1
debug = false
plugins =

[data-initializer]
databases-path = CH
databases = archetypes, assemblies, components

[archetypes-mapper]
input-databases = comfort, architecture, air-conditioning, internal-loads, supply, schedules
buildings = 

[streets-helper]
bbox = 
streets = all_private

[terrain-helper]
grid-size = 30
elevation = 1

[surroundings-helper]
buffer = 50
height-ag = 
floors-ag = 

[zone-helper]
height-ag = 
floors-ag = 
year-construction = 
height-bg = 3
floors-bg = 1
occupancy-type = Get it from open street maps

[weather-helper]
weather = 

[radiation]
buildings = 
use-latest-daysim-binaries = true
albedo = 0.2
roof-grid = 10
walls-grid = 200
zone-geometry = 2
surrounding-geometry = 5
consider-floors = true
consider-intersections = false
rad-ab = 4
rad-ad = 512
rad-as = 32
rad-ar = 20
rad-aa = 0.15
rad-lr = 8
rad-st = 0.5
rad-sj = 0.7
rad-lw = 0.05
rad-dj = 0.7
rad-ds = 0
rad-dr = 0
rad-dp = 32
daysim-bin-directory = /Daysim/bin
n-buildings-in-chunk = 100
write-sensor-data = true

[schedule-maker]
buildings = 
schedule-model = deterministic

[demand]
buildings = 
loads-output = 
massflows-output = 
temperatures-output = 
resolution-output = hourly
use-dynamic-infiltration-calculation = false
predefined-hourly-setpoints = false

[costs]
capital = true
operational = true

[emissions]
year-to-calculate = 2020
embodied = true
operation = true

[extract-reference-case]
destination = {general:scenario}/../..
case = open

[solar]
buildings = 
type-pvpanel = PV1
type-scpanel = FP
panel-on-roof = True
panel-on-wall = True
annual-radiation-threshold = 800
t-in-sc = 
t-in-pvt = 
solar-window-solstice = 4

[dbf-tools]
input-file = {general:scenario}/inputs/technology/archetypes/construction_properties.xlsx
output-file-name = converted_file
output-path = {general:scenario}

[shapefile-tools]
excel-file = {general:scenario}/inputs/building-geometry/zone.xls
shapefile = {general:scenario}/inputs/building-geometry/zone.shp
crs = {"lon_0": 7.439583333333333, "k_0": 1, "ellps": "bessel", "y_0": 200000, "no_defs": true, "proj": "somerc", "x_0": 600000, "units": "m", "lat_0": 46.95240555555556}
index = Name
polygon = True

[test]
workflow = quick

[trace-inputlocator]
scripts = archetypes-mapper, demand, emissions
meta-output-file = {general:scenario}/outputs/trace_inputlocator.output.yml

[thermal-network]
network-type = DH
network-model = simplified
min-head-substation = 20
hw-friction-coefficient = 100
peak-load-velocity = 2
equivalent-length-factor = 0.2
peak-load-percentage = 100
network-names = 
set-diameter = true
load-max-edge-flowrate-from-previous-run = false
start-t = 0
stop-t = 8760
use-representative-week-per-month = false
minimum-mass-flow-iteration-limit = 30
minimum-edge-mass-flow = 0.1
diameter-iteration-limit = 10
substation-cooling-systems = ahu, aru, scu
substation-heating-systems = ahu, aru, shu, ww
temperature-control = VT
plant-supply-temperature = 80

[thermal-network-optimization]
network-type = DH
network-names = 
file-type = shp
set-diameter = true
load-max-edge-flowrate-from-previous-run = false
start-t = 0
stop-t = 8760
network-name = 
possible-plant-sites = 
min-number-of-plants = 1
max-number-of-plants = 1
number-of-individuals = 6
chance-of-mutation = 20
number-of-generations = 20
lucky-few = 1
optimize-loop-branch = false
optimize-network-loads = false
optimize-building-connections = false
use-rule-based-approximation = false
use-representative-week-per-month = false
minimum-mass-flow-iteration-limit = 30
minimum-edge-mass-flow = 0.1
diameter-iteration-limit = 10
substation-cooling-systems = ahu, aru, scu
substation-heating-systems = ahu, aru, shu, ww
disconnected-buildings = 
yearly-cost-calculations = false

[optimization]
network-type = DH
technologies-dh = NG_Cogen, WB_Cogen, DB_Cogen, NG_BaseBoiler, NG_PeakBoiler, WS_HP, SS_HP, GS_HP, DS_HP, PVT, SC_ET, SC_FP, PV
technologies-dc = NG_Trigen, WS_BaseVCC, WS_PeakVCC, AS_BaseVCC, AS_PeakVCC, Storage, PV
population-size = 
number-of-generations = 100
random-seed = 100
mutation-prob = 0.1
mutation-method-integer = Flipbit
mutation-method-continuous = Polynomial
crossover-prob = 0.9
crossover-method-integer = UniformPartialyMatched
crossover-method-continuous = Uniform

[plots]
buildings = 
building = 
categories = demand, solar_potentials, solar_technology, life_cycle_analysis, thermal_network
network-type = DC
network-name = 
plant-node = 
timeframe = monthly
normalization = none

[plots-optimization]
generation = 
normalization = none

[plots-supply-system]
system = sys_2_15
timeframe = monthly

[plots-comparisons]
scenarios-and-systems = {general:scenario-name}_sys_today_
normalization = none

[sewage]
heat-exchanger-length = 120
sewage-water-ratio = 0.95
sewage-water-district = 50

[water-body]
max-water-volume-withdrawal = 1000
max-delta-temperature-withdrawal = 8
temperature-max = 6
temperature-min = 4

[shallow-geothermal]
buildings-available = 
extra-area-available = 0.0
average-probe-depth = 10

[create-new-scenario]
project = cea-new-project
scenario = baseline
output-path = {general:scenario}/../..
zone = {general:scenario}/inputs/building-geometry/zone.shp
terrain = {general:scenario}/inputs/topography/terrain.tif
streets = {general:scenario}/inputs/networks/streets.shp
surroundings = 
typology = 

[decentralized]

[network-layout]
network-type = DC
connected-buildings = 
pipe-diameter = 150
type-mat = T1
allow-looped-networks = false
consider-only-buildings-with-demand = true

[multi-criteria]
generation = 3
annualized-capital-costs = 0.4
total-capital-costs = 0.1
annual-operation-costs = 0.1
annual-emissions = 0.4

[workflow]
workflow =
resume = off
resume-file = 
trace-input = off

[rename-building]
old = 
new = 

[create-mixed-use-type]
use-type = mixed_use
metadata = mixed-use
ratios = MULTI_RES|1.0

[create-polygon]
coordinates = (-1, 0), (0, 1), (1, 0)
filename = polygon

[server]
project-root = {general:project}/..
host = 0.0.0.0
port = 5050
protocol = http

[worker]
url = http://127.0.0.1:5050/server

[schemas]
locator-method = get_zone_geometry
args = {}

[development]
nsis = 
conda = 
gui = 
yarn =
