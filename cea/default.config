[general]
project = ~/reference-case-open
project.type = PathParameter
project.help = Select the path of the project you're working on.

scenario-name = baseline
scenario-name.type = ScenarioNameParameter
scenario-name.help = Select the name of the scenario of the project you're working on.

scenario = {general:project}/{general:scenario-name}
scenario.type = ScenarioParameter
scenario.help = Select the scenario you're working on.

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = True for quicker calculation.

number-of-cpus-to-keep-free = 1
number-of-cpus-to-keep-free.type = IntegerParameter
number-of-cpus-to-keep-free.help = Limits the maximum number of processors to use for multiprocessing. By default, one CPU is kept free.
number-of-cpus-to-keep-free.category = Advanced

debug = false
debug.type = BooleanParameter
debug.help = Enable debugging-specific behaviors.
debug.category = Advanced

plugins =
plugins.type = PluginListParameter
plugins.help = A list of plugins (python classes that implement cea.plugin.CeaPlugin)

[data-initializer]
databases-path = CH
databases-path.type = DatabasePathParameter
databases-path.help = Either a full path to databases or the standard databases contained within the CEA.

databases = archetypes, assemblies, components
databases.type = MultiChoiceParameter
databases.choices = archetypes, assemblies, components
databases.help = List of databases to initialize from the selected path

[archetypes-mapper]
input-databases = comfort, architecture, air-conditioning, internal-loads, supply, schedules
input-databases.type = MultiChoiceParameter
input-databases.choices = comfort, architecture, air-conditioning, internal-loads, supply, schedules
input-databases.help = List of inputs to map from your databases to your new/existing scenario

buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings to create schedules for (leave blank to consider all).
buildings.category = Specific inputs for the schedule database

[streets-helper]
bbox =
bbox.type = ListParameter
bbox.help = The bounding box of the surroundings using the surroundings shapefile (leave blank) or a list of coordinates (bbox = min Longitude , min Latitude , max Longitude , max Latitude)

streets = all_private
streets.type = ChoiceParameter
streets.choices = all_private, walk, bike, drive, drive_service, all
streets.help = The type of streets to gather.

[terrain-helper]
grid-size = 30
grid-size.type = IntegerParameter
grid-size.nullable = false
grid-size.help = Grid size for the terrain file (do not use less than 10 meters).

buffer = 50
buffer.type = RealParameter
buffer.help = Buffer for the total bounds of the scene (in meters). Helps to ensure the terrain covers all geometries.

[surroundings-helper]
buffer = 50
buffer.type = RealParameter
buffer.help = Perimeter buffer length to the surrounding area (in meters).

height-ag =
height-ag.type = RealParameter
height-ag.nullable = true
height-ag.help = Average height of buildings within the surroundings (in meters). Leave it blank to obtain from Open Street Maps (less accurate).

floors-ag =
floors-ag.type = IntegerParameter
floors-ag.nullable = true
floors-ag.help = Average number of floors above ground of all buildings within the surroundings. Leave it blank to obtain from Open Street Maps (less accurate).

[zone-helper]
height-ag =
height-ag.type = RealParameter
height-ag.nullable = true
height-ag.help = Average height of buildings within the zone (in meters). Leave it blank to obtain from Open Street Maps (less accurate).

floors-ag =
floors-ag.type = IntegerParameter
floors-ag.nullable = true
floors-ag.help = Average number of floors above ground of all buildings within the zone. Leave it blank to obtain from Open Street Maps (less accurate).

year-construction =
year-construction.nullable = true
year-construction.type = IntegerParameter
year-construction.help = Average year of construction of buildings within the zone. Leave it blank to obtain from Open Street Maps (less accurate).

height-bg = 3
height-bg.type = RealParameter
height-bg.help = Average height of buildings below ground (in meters).

floors-bg = 1
floors-bg.type = IntegerParameter
floors-bg.help = Average number of floors below ground of all buildings within the zone.

occupancy-type = Get it from open street maps
occupancy-type.choices = Get it from open street maps, MULTI_RES, OFFICE, RETAIL, SCHOOL, HOTEL, GYM, HOSPITAL, INDUSTRIAL, RESTAURANT, SINGLE_RES, SERVERROOM, SWIMMING, FOODSTORE, LIBRARY, COOLROOM, PARKING
occupancy-type.type = ChoiceParameter
occupancy-type.help = Predominant occupancy type of all buildings. Use "Get it from open street maps" to obtain from Open Street Maps (less accurate).

include-building-parts = true
include-building-parts.type = BooleanParameter
include-building-parts.help = Includes polygons tagged as as `building:part` on OpenStreetMap as well as polygons tagged as `building`.

fix-overlapping-geometries = true
fix-overlapping-geometries.type = BooleanParameter
fix-overlapping-geometries.help = Tries to eliminate overlapping building volumes (and subsequent double counting) by fixing overlaps of ground-surface polygons and retaining only the tallest of the overlapping buildings.

[trees-helper]
trees =
trees.type = FileParameter
trees.extensions = shp
trees.nullable = true
trees.help = Path to shapefile containing the geometries of tree canopies in polygon format and attributes of Name (unique tree ID), height_tc (tree canopy height above ground in metres), and density_tc (tree canopy density).

[weather-helper]
weather =
weather.type = WeatherPathParameter
weather.help = Either a full path to a weather file (.epw or .dat) or the name of one of the weather files contained within the CEA. Leave blank to fetch from third-party sources.

[radiation]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the radiation simulation. Leave blank when simulating all buildings.

use-latest-daysim-binaries = true
use-latest-daysim-binaries.type = BooleanParameter
use-latest-daysim-binaries.help = True to use the latest Daysim binaries which is faster and able to run larger sites, yet producing non-deterministic results. False to use old binary for reproducibility. Applicable only to Windows and will be ignored otherwise.

albedo = 0.2
albedo.type = RealParameter
albedo.help = Albedo of the terrain.

roof-grid = 10
roof-grid.type = RealParameter
roof-grid.help =  Grid resolution for the roof surfaces. Use 200 (maximum) if you want only one point per surface.
roof-grid.category = Level of Detail

walls-grid = 200
walls-grid.type = RealParameter
walls-grid.help = Grid resolution for wall surfaces. Use 200 (maximum) if you want only one point per surface.
walls-grid.category = Level of Detail

zone-geometry = 2
zone-geometry.type = RealParameter
zone-geometry.help = Simplification level of zone geometry; tolerance distance of points in meters from original.
zone-geometry.category = Level of Detail

surrounding-geometry = 5
surrounding-geometry.type = RealParameter
surrounding-geometry.help = Simplification level of surroundings geometry; tolerance distance of points in meters from original.
surrounding-geometry.category = Level of Detail

consider-floors = true
consider-floors.type = BooleanParameter
consider-floors.help = True if floors are considered in the geometry.
consider-floors.category = Level of Detail

neglect-adjacent-buildings = false
neglect-adjacent-buildings.type = BooleanParameter
neglect-adjacent-buildings.help = True if adjacent walls with neighboring buildings should be neglected. If set to True, the results might be less accurate (there might be insolation on attached walls and no adiabatic surfaces between adjacent buildings will be considered), but the simulation time will decrease somewhat.
neglect-adjacent-buildings.category = Level of Detail

rad-ab = 4
rad-ab.type = IntegerParameter
rad-ab.help = Number of ambient bounces.
rad-ab.category = Daysim simulation parameters

rad-ad = 512
rad-ad.type = IntegerParameter
rad-ad.help = Number of ambient divisions.
rad-ad.category = Daysim simulation parameters

rad-as = 32
rad-as.type = IntegerParameter
rad-as.help = Number of ambient super-samples.
rad-as.category = Daysim simulation parameters

rad-ar = 20
rad-ar.type = IntegerParameter
rad-ar.help = Ambient resolution.
rad-ar.category = Daysim simulation parameters

rad-aa = 0.15
rad-aa.type = RealParameter
rad-aa.help = Ambient accuracy.
rad-aa.category = Daysim simulation parameters

rad-lr = 8
rad-lr.type = IntegerParameter
rad-lr.help = Maximum number of reflections.
rad-lr.category = Daysim simulation parameters

rad-st = 0.5
rad-st.type = RealParameter
rad-st.help = Specular sampling threshold.
rad-st.category = Daysim simulation parameters

rad-sj = 0.7
rad-sj.type = RealParameter
rad-sj.help = Specular sampling jitter.
rad-sj.category = Daysim simulation parameters

rad-lw = 0.05
rad-lw.type = RealParameter
rad-lw.help = Minimum weight of each ray.
rad-lw.category = Daysim simulation parameters

rad-dj = 0.7
rad-dj.type = RealParameter
rad-dj.help = Direct jitter.
rad-dj.category = Daysim simulation parameters

rad-ds = 0
rad-ds.type = RealParameter
rad-ds.help = Direct sampling ration.
rad-ds.category = Daysim simulation parameters

rad-dr = 0
rad-dr.type = IntegerParameter
rad-dr.help = Number of relays from secondary sources.
rad-dr.category = Daysim simulation parameters

rad-dp = 32
rad-dp.type = IntegerParameter
rad-dp.help = Secondary source pre-sampling density.
rad-dp.category = Daysim simulation parameters

daysim-bin-directory =
daysim-bin-directory.type = PathParameter
daysim-bin-directory.help = Path to the Daysim binaries. This path will be used instead of the default CEA Dependencies.
daysim-bin-directory.category = Advanced

n-buildings-in-chunk = 100
n-buildings-in-chunk.type = IntegerParameter
n-buildings-in-chunk.help =  Minimum number of building groups (chunks) to be sent for multiprocessing.
n-buildings-in-chunk.category = Advanced

write-sensor-data = true
write-sensor-data.type = BooleanParameter
write-sensor-data.help =  Write also data per point in the grid. (Only needed to run solar technologies). False saves space in disk
write-sensor-data.category = Advanced

[radiation-simplified]
sample-buildings =
sample-buildings.type = BuildingsParameter
sample-buildings.help = List of buildings to sample for the radiation simulation. Note that this list of sampled buildings must be a subset of the list of buildings selected above.

buffer = 50
buffer.type = RealParameter
buffer.help = Perimeter buffer (m) around sample buildings .

[schedule-maker]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the schedule model (to simulate all buildings leave blank).

schedule-model = deterministic
schedule-model.type = ChoiceParameter
schedule-model.choices = deterministic, stochastic
schedule-model.help = Type of schedule model to use (stochastic or deterministic)

[demand]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the demand simulation (to simulate all buildings leave blank).

loads-output =
loads-output.type = MultiChoiceParameter
loads-output.choices = PV,
    GRID,
    GRID_a,
    GRID_l,
    GRID_v,
    GRID_ve,
    GRID_data,
    GRID_pro,
    GRID_aux,
    GRID_ww,
    GRID_hs,
    GRID_cs,
    GRID_cdata,
    GRID_cre,
    E_sys, Eal, Ea, El, Ev, Eve, Edata, Epro, Eaux,
    E_ww, E_hs, E_cs, E_cre, E_cdata,
    Qhs_sen_shu, Qhs_sen_ahu, Qhs_lat_ahu,
    Qhs_sen_aru, Qhs_lat_aru, Qhs_sen_sys,
    Qhs_lat_sys, Qhs_em_ls, Qhs_dis_ls,
    Qhs_sys_shu, Qhs_sys_ahu, Qhs_sys_aru,
    Qcs_sys_scu, Qcs_sys_ahu, Qcs_sys_aru,
    DH_hs, Qhs_sys, Qhs,
    DH_ww, Qww_sys, Qww,
    DC_cs, Qcs_sys, Qcs,
    DC_cre, Qcre_sys, Qcre,
    DC_cdata, Qcdata_sys, Qcdata,
    NG_hs,
    COAL_hs,
    OIL_hs,
    WOOD_hs,
    SOLAR_hs,
    NG_ww,
    COAL_ww,
    OIL_ww,
    WOOD_ww,
    SOLAR_ww,
    Qcs_sen_scu, Qcs_sen_ahu,
    Qcs_lat_ahu, Qcs_sen_aru, Qcs_lat_aru,
    Qcs_sen_sys, Qcs_lat_sys, Qcs_em_ls,
    Qcs_dis_ls, Qhpro_sys, Qcpro_sys,
    QH_sys, QC_sys
loads-output.help = List of loads output by the demand simulation (to simulate all load types in demand_writer, leave blank).
loads-output.category = Advanced

massflows-output =
massflows-output.type = MultiChoiceParameter
massflows-output.choices = mcpww_sys, mcptw, mcpcs_sys, mcphs_sys, mcpcs_sys_ahu, mcpcs_sys_aru, mcpcs_sys_scu, mcphs_sys_ahu, mcphs_sys_aru, mcphs_sys_shu, mcpcre_sys, mcpcdata_sys
massflows-output.help = List of mass flow rates output by the demand simulation (to simulate all system mass flow rates in demand_writer, leave blank).
massflows-output.category = Advanced

temperatures-output =
temperatures-output.type = MultiChoiceParameter
temperatures-output.choices =  T_int, T_ext, theta_o, Tww_sys_sup, Tww_sys_re, Tcre_sys_re, Tcre_sys_sup, Tcdata_sys_re, Tcdata_sys_sup, Ths_sys_sup_aru, Ths_sys_sup_ahu, Ths_sys_sup_shu, Ths_sys_re_aru, Ths_sys_re_ahu, Ths_sys_re_shu, Tcs_sys_sup_aru, Tcs_sys_sup_ahu, Tcs_sys_sup_scu, Tcs_sys_re_aru, Tcs_sys_re_ahu, Tcs_sys_re_scu, Ths_sys_sup, Ths_sys_re, Tcs_sys_sup, Tcs_sys_re
temperatures-output.help = List of temperatures output by the demand simulation (to simulate all temperatures in demand_writer, leave blank).
temperatures-output.category = Advanced

resolution-output = hourly
resolution-output.type = ChoiceParameter
resolution-output.choices = hourly, monthly
resolution-output.help = Time step resolution of the demand simulation (hourly or monthly).
resolution-output.category = Advanced

use-dynamic-infiltration-calculation = false
use-dynamic-infiltration-calculation.type = BooleanParameter
use-dynamic-infiltration-calculation.help = True if dynamic infiltration calculations are considered (slower run times!).
use-dynamic-infiltration-calculation.category = Advanced

overheating-warning = true
overheating-warning.type = BooleanParameter
overheating-warning.help = Set to False to bypass overheating warning.
overheating-warning.category = Advanced

[costs]
capital = true
capital.type = BooleanParameter
capital.help = Estimate Capital costs (total and annualized) due to supply systems (allocated according to the supply-systems input database)

operational = true
operational.type = BooleanParameter
operational.help = Estimate Operational costs (variable and fixed) due to supply systems operation (allocated according to the supply-systems input database)

[emissions]
year-to-calculate = 2024
year-to-calculate.type = IntegerParameter
year-to-calculate.help = Defines the time period (year-to-calculate - year_built or year_renovated) over which embodied emissions are calculated. If greater than 60 years, embodied emissions are not considered.

embodied = true
embodied.type = BooleanParameter
embodied.help = Estimate emissions due to construction and dismantling of buildings (allocated according to the age input database, LCA database and building geometry)

operation = true
operation.type = BooleanParameter
operation.help = Estimate emissions due to supply systems operation (allocated according to the supply-systems input database)

[extract-reference-case]
destination = {general:scenario}/../..
destination.type = PathParameter
destination.help = Destination for the extracted reference case (zipped within CityEnergyAnalyst/cea/examples).

case = open
case.type = ChoiceParameter
case.choices = open, heating, cooling, WTP
case.help = Reference case to extract.

[solar]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of buildings considered for the photovoltaic (PV), photovoltaic thermal (PVT) and solar collector (SC) simulations (to simulate all buildings leave blank).

type-pvpanel = PV1
type-pvpanel.type = ChoiceParameter
type-pvpanel.choices = PV1, PV2, PV3, PV4, PV5, PV6, PV7, PV8, PV9, PV10
type-pvpanel.help = Type of PV panel.

type-scpanel = FP
type-scpanel.type = ChoiceParameter
type-scpanel.choices = FP, ET
type-scpanel.help = Type of solar collector: "FP" (Flat-plate) or "ET" (Evacuated-tubes).

panel-on-roof = True
panel-on-roof.type = BooleanParameter
panel-on-roof.help = True if panels are considered on roof surfaces.

panel-on-wall = True
panel-on-wall.type = BooleanParameter
panel-on-wall.help = True if panels are considered on wall surfaces.

annual-radiation-threshold = 800
annual-radiation-threshold.type = RealParameter
annual-radiation-threshold.help = Only consider panels on surfaces that receive radiation above the defined threshold [kWh/m2/yr].

t-in-sc =
t-in-sc.type = RealParameter
t-in-sc.help = Inlet temperature of solar collectors in celsius (if blank: 60C for Flat-plate and 75C for Evacuated-tube).
t-in-sc.nullable = true
t-in-sc.category = Advanced

t-in-pvt =
t-in-pvt.type = RealParameter
t-in-pvt.help = Inlet temperature of PVT panels in celsius (if blank: 35C).
t-in-pvt.nullable = true
t-in-pvt.category = Advanced

solar-window-solstice = 4
solar-window-solstice.type = IntegerParameter
solar-window-solstice.help = Desired time of solar exposure on the solstice in hours.
solar-window-solstice.category = Advanced

max-roof-coverage = 1.0
max-roof-coverage.type = RealParameter
max-roof-coverage.help = Maximum panel coverage [m2/m2] of roof surfaces that reach minimum irradiation threshold (valid values between 0 and 1).

custom-tilt-angle = False
custom-tilt-angle.type = BooleanParameter
custom-tilt-angle.help = Calculate solar panel potential based on a user-specified panel tilt angle. If False, the optimal tilt angle will be used for the calculation.

panel-tilt-angle = 10
panel-tilt-angle.type = RealParameter
panel-tilt-angle.help = Solar panel tilt angle if using user-defined tilt angle.

[dbf-tools]
#converter of dbf to csv(xlsx) vice versa
input-file =
input-file.type = FileParameter
input-file.extensions = csv dbf xlsx
input-file.nullable = true
input-file.help = Path to the dbf or csv(xlsx) file.

output-file-name = converted_file.dbf
output-file-name.type = StringParameter
output-file-name.help = Name of the output file (with extension).

output-path =
output-path.type = PathParameter
output-path.help = Path to save the dbf <-> csv(xlsx) conversion results.

[shapefile-tools]
#converter of shp to csv(xlsx) and vice versa
input-file =
input-file.type = FileParameter
input-file.extensions = csv shp xlsx
input-file.nullable = true
input-file.help = Path to the ESRI Shapefile or csv(xlsx) file. csv(xlsx) Files need to have a column named "geometry" with cell contents following such a format as "[[463721.7362, 15245947.2], [463722.7364, 15245954.04], [463739.366, 15245953.25], [463721.7362, 15245947.2]]" for a triangle-shaped building footprint as an example. In the example, the unit of the coordinates is in metres. Unit in decimal degrees is supported when the coordinate reference system (crs) of the reference shapefile is in decimal degrees.

output-file-name = converted_file.shp
output-file-name.type = StringParameter
output-file-name.help = Name of the output file (with extension).

output-path =
output-path.type = PathParameter
output-path.help = Path to save the shapefile <-> csv(xlsx) conversion results.

reference-shapefile  =
reference-shapefile.type = FileParameter
reference-shapefile.extensions = shp
reference-shapefile.nullable = true
reference-shapefile.help = Path to the reference shapefile when converting csv(xlsx) file to ESRI Shapefile. This is to acquire the crs information for the shapefile to be generated. Set to the same path as for input-file when converting ESRI Shapefile to csv(xlsx) file.

polygon = True
polygon.type = BooleanParameter
polygon.help = Only required when converting csv(xlsx) file to ESRI Shapefile. True if the geometry column is interpreted as polygon coordinates, false if it is interpreted as a polyline. Ignore when converting ESRI Shapefile to csv(xlsx) File.


[sensitivity-analysis-tools]

create-scenario-directory = false
create-scenario-directory.type = BooleanParameter
create-scenario-directory.help = True if creating parallel CEA scenario inputs directories under the current project.

n = 32
n.type = IntegerParameter
n.help = The Saltelli sampler generates n*(2D+2) samples, where D is the number of variables.

having-variable-1 = true
having-variable-1.type = BooleanParameter
having-variable-1.help = True when having no less than 1 variable.

variable-1-lower-bound = 0
variable-1-lower-bound.type = RealParameter
variable-1-lower-bound.help = Lower bound of Variable 1.
variable-1-lower-bound.nullable = true

variable-1-upper-bound = 100
variable-1-upper-bound.type = RealParameter
variable-1-upper-bound.help = Upper bound of Variable 1.
variable-1-upper-bound.nullable = true

having-variable-2 = false
having-variable-2.type = BooleanParameter
having-variable-2.help = True when having no less than 2 variables.

variable-2-lower-bound =
variable-2-lower-bound.type = RealParameter
variable-2-lower-bound.help = Lower bound of Variable 2.
variable-2-lower-bound.nullable = true

variable-2-upper-bound =
variable-2-upper-bound.type = RealParameter
variable-2-upper-bound.help = Upper bound of Variable 2.
variable-2-upper-bound.nullable = true

having-variable-3 = false
having-variable-3.type = BooleanParameter
having-variable-3.help = True when having no less than 3 variables.

variable-3-lower-bound =
variable-3-lower-bound.type = RealParameter
variable-3-lower-bound.help = Lower bound of Variable 3.
variable-3-lower-bound.nullable = true

variable-3-upper-bound =
variable-3-upper-bound.type = RealParameter
variable-3-upper-bound.help = Upper bound of Variable 3.
variable-3-upper-bound.nullable = true

having-variable-4 = false
having-variable-4.type = BooleanParameter
having-variable-4.help = True when having no less than 4 variables.

variable-4-lower-bound =
variable-4-lower-bound.type = RealParameter
variable-4-lower-bound.help = Lower bound of Variable 4.
variable-4-lower-bound.nullable = true

variable-4-upper-bound =
variable-4-upper-bound.type = RealParameter
variable-4-upper-bound.help = Upper bound of Variable 4.
variable-4-upper-bound.nullable = true

having-variable-5 = false
having-variable-5.type = BooleanParameter
having-variable-5.help = True when having no less than 5 variables.

variable-5-lower-bound =
variable-5-lower-bound.type = RealParameter
variable-5-lower-bound.help = Lower bound of Variable 5.
variable-5-lower-bound.nullable = true

variable-5-upper-bound =
variable-5-upper-bound.type = RealParameter
variable-5-upper-bound.help = Upper bound of Variable 5.
variable-5-upper-bound.nullable = true


[batch-process-workflow]
all-scenarios = false
all-scenarios.type = BooleanParameter
all-scenarios.help = True if executing CEA Simulations for all scenarios under this project. False if executing CEA Simulations for the current scenario only.

zone-csv-to-shp = false
zone-csv-to-shp.type = BooleanParameter
zone-csv-to-shp.help = True if converting zone.csv(xlsx) to zone.shp. Ensure zone.csv(xlsx) is stored under Folder >inputs>building-geometry. Ensure the reference shapefile is linked under the respective tool tab and Save to Config. This tool facilitates linking Rhino/Grasshopper to CEA - user may output Rhino/Grasshopper geometries to zone.csv(xlsx) file and convert it zone.shp.

typology-csv-to-dbf = false
typology-csv-to-dbf.type = BooleanParameter
typology-csv-to-dbf.help = True if converting typology.csv(xlsx) to typology.dbf. Ensure typology.csv(xlsx) is stored under Folder >inputs>building-properties. This tool facilitates linking Rhino/Grasshopper to CEA - user may output Rhino/Grasshopper geometries to typology.csv(xlsx) file and convert it typology.dbf.

data-initializer = false
data-initializer.type = BooleanParameter
data-initializer.help = True if using CEA built-in databases. Select/link database under the respective tool tab and Save to Config. False if using user-defined database. Ensure it is correctly formatted and placed under Folder >inputs>technology.

archetypes-mapper = false
archetypes-mapper.type = BooleanParameter
archetypes-mapper.help = True if executing CEA archetypes-mapper.

weather-helper = false
weather-helper.type = BooleanParameter
weather-helper.help = True if executing CEA weather-helper. Select/link weather file under the respective tool tab and Save to Config.

surroundings-helper = false
surroundings-helper.type = BooleanParameter
surroundings-helper.help = True if executing CEA surroundings-helper. Define buffer under the respective tool tab and Save to Config.

terrain-helper = false
terrain-helper.type = BooleanParameter
terrain-helper.help = True if executing CEA terrain helper. Define resolution and elevation under the respective tool tab and Save to Config.

streets-helper = false
streets-helper.type = BooleanParameter
streets-helper.help = True if executing CEA streets-helper. Consider setting to True when executing thermal network analysis. CEA creates streets.shp based on OpenStreetMap data.

streets-csv-to-shp = false
streets-csv-to-shp.type = BooleanParameter
streets-csv-to-shp.help = True if converting streets.csv(xlsx) to zone.shp. Ensure streets.csv(xlsx) is stored under Folder >inputs>networks. Ensure the reference shapefile is linked under the respective tool tab and Save to Config. This tool facilitates linking Rhino/Grasshopper to CEA - user may output Rhino/Grasshopper geometries to streets.csv(xlsx) file and convert it streets.shp.

radiation = false
radiation.type = BooleanParameter
radiation.help = True if executing CEA building radiation analysis using Daysim. Ensure radiation analysis results are in place before executing demand-forecasting and solar-potential analysis.

demand-forecasting = false
demand-forecasting.type = BooleanParameter
demand-forecasting.help = True if executing CEA demand-forecasting. Change default parameters under the respective tool tabs (i.e. building schedules and building energy demand) and Save to Config.

emissions = false
emissions.type = BooleanParameter
emissions.help = True if executing CEA life-cycle-analysis. Set the Year for calculation under the respective tool tab and Save to Config.

system-costs = false
system-costs.type = BooleanParameter
system-costs.help = True if executing CEA system-costs-analysis.

solar-potential-pv = false
solar-potential-pv.type = BooleanParameter
solar-potential-pv.help = True if executing CEA solar-energy-potential-analysis using photovoltaic panels. Change default parameters under the respective tab and Save to Config.

solar-potential-other = false
solar-potential-other.type = BooleanParameter
solar-potential-other.help = True if executing CEA solar-energy-potential-analysis using all other solar technologies. Change default parameters under the respective tabs (i.e. photovoltaic-thermal and solar-collector including flat-plates and evacuated-tubes) and Save to Config.

shallow-geothermal-potential = false
shallow-geothermal-potential.type = BooleanParameter
shallow-geothermal-potential.help = True if executing CEA shallow-geothermal-potential-analysis. Change default parameters under the respective tool tab and Save to Config.

water-body-potential = false
water-body-potential.type = BooleanParameter
water-body-potential.help = True if executing CEA water-body-potential-analysis. Change default parameters under the respective tool tab and Save to Config.

sewage-heat-potential= false
sewage-heat-potential.type = BooleanParameter
sewage-heat-potential.help = True if executing CEA sewage-heat-potential-analysis. Change default parameters under the respective tool tab and Save to Config.

thermal-network-layout = false
thermal-network-layout.type = BooleanParameter
thermal-network-layout.help = True if executing CEA thermal-network-layout-design. Change default parameters under the respective tool tab and Save to Config.

thermal-network-operation = false
thermal-network-operation.type = BooleanParameter
thermal-network-operation.help = True if executing CEA thermal-network-operation-analysis. Change default parameters under the respective tool tab and Save to Config.

optimization = false
optimization.type = BooleanParameter
optimization.help = True if executing CEA district-energy-supply-system-optimization. Change default parameters under the respective tabs (i.e. supply system part 1 - decentralized and supply system part 2 - centralized, beta version) and Save to Config.

result-summary = true
result-summary.type = BooleanParameter
result-summary.help = True if generating a summary of the CEA results simulated.

result-analytics = true
result-analytics.type = BooleanParameter
result-analytics.help = True if generating advanced analytics based on the CEA results simulated.

[result-summary]
all-scenarios = false
all-scenarios.type = BooleanParameter
all-scenarios.help = True if reading through and summarising the results for all scenarios under this project. False for the current scenario only.

[result-analytics]
all-scenarios = false
all-scenarios.type = BooleanParameter
all-scenarios.help = True if reading the results and calculating the advanced analytics for all scenarios under this project. False for the current scenario only.

[test]
type = unittest
type.type = ChoiceParameter
type.choices = unittest, integration
type.help = The test workflow to run

[trace-inputlocator]
scripts = archetypes-mapper, demand, emissions
scripts.type = MultiChoiceParameter
scripts.choices = compile,
    copy-default-databases,
    create-new-scenario,
    dashboard,
    archetypes-mapper,
    dbf-to-excel-to-dbf,
    decentralized,
    demand,
    emissions,
    excel-to-shapefile,
    extract-reference-case,
    lake-potential,
    shallow-geothermal-potential,
    list-demand-graphs-fields,
    multi-criteria-analysis,
    network-layout,
    costs,
    optimization,
    photovoltaic,
    photovoltaic-thermal,
    plots,
    plots-optimization,
    plots-scenario-comparisons,
    plots-supply-system,
    radiation,
    sensitivity-demand-analyze,
    sensitivity-demand-samples,
    sensitivity-demand-simulate,
    sewage-potential,
    shapefile-to-excel,
    solar-collector,
    supply-system-simulation,
    test,
    thermal-network,
    thermal-network-optimization
scripts.help = Sequential list of scripts to run.

meta-output-file = {general:scenario}/outputs/trace_inputlocator.output.yml
meta-output-file.type = FileParameter
meta-output-file.extensions = yml
meta-output-file.help = Path to the filename of the yml output file.


[thermal-network]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network to be simulated: "DH" (district heating) or "DC" (district cooling).

network-model = simplified
network-model.type = ChoiceParameter
network-model.choices = simplified, detailed
network-model.help = Choose either simplified (seconds) or detailed model (several hours)

min-head-substation = 20
min-head-substation.type = RealParameter
min-head-substation.help = Minimum head loss in kPa expected at each thermal transfer substation
min-head-substation.category = Parameters of simplified model

hw-friction-coefficient = 100
hw-friction-coefficient.type = IntegerParameter
hw-friction-coefficient.help = Hanzen-Williams friction coefficient considered for the pipes in mm
hw-friction-coefficient.category = Parameters of simplified model

peak-load-velocity = 2
peak-load-velocity.type = RealParameter
peak-load-velocity.help = Maximum velocity expected in pipes in m/s (Higher values result in smaller pipe diameters)
peak-load-velocity.category = Parameters of simplified model

equivalent-length-factor = 0.2
equivalent-length-factor.type = RealParameter
equivalent-length-factor.help = fraction of pressure losses expected dues to accessories in the network (valid values within 0.0 and 0.6)

peak-load-percentage = 100
peak-load-percentage.type = RealParameter
peak-load-percentage.help = Percentage of the peak demand in % to use for pipe sizing (valid values within 0 and 200)
peak-load-percentage.category = Parameters of simplified model

network-names =
network-names.type = ListParameter
network-names.help = List of network file names for either DH (district heating) or DC (district cooling) network types.
network-names.category = Parameters of detailed model

set-diameter = true
set-diameter.type = BooleanParameter
set-diameter.help = True if diameters are set by maximum velocity (2m/s), false if diameters are considered a fixed input.
set-diameter.category = Parameters of detailed model

load-max-edge-flowrate-from-previous-run = false
load-max-edge-flowrate-from-previous-run.type = BooleanParameter
load-max-edge-flowrate-from-previous-run.help = True to bypass the calc_max_edge_flowrate function, using results from the previous simulation (useful for debugging).
load-max-edge-flowrate-from-previous-run.category = Parameters of detailed model

start-t = 0
start-t.type = IntegerParameter
start-t.help = Start hour for calculations (0-based).
start-t.category = Parameters of detailed model

stop-t = 8760
stop-t.type = IntegerParameter
stop-t.help = Stop hour for calculations (0-based, upper bound).
stop-t.category = Parameters of detailed model

use-representative-week-per-month = false
use-representative-week-per-month.type = BooleanParameter
use-representative-week-per-month.help = True to use the data for first week of each month instead of the full month.
use-representative-week-per-month.category = Parameters of detailed model

minimum-mass-flow-iteration-limit = 30
minimum-mass-flow-iteration-limit.type = IntegerParameter
minimum-mass-flow-iteration-limit.help = Maximum number of iterations permitted for the increase of minimum mass flows in the network.
minimum-mass-flow-iteration-limit.category = Parameters of detailed model

minimum-edge-mass-flow = 0.1
minimum-edge-mass-flow.type = RealParameter
minimum-edge-mass-flow.help = Minimum mass flow rate permitted in the network (in kg/s). If the mass flow rate in any edge is below this value at any time period, the thermal network will be re-sized accordingly
minimum-edge-mass-flow.category = Parameters of detailed model

diameter-iteration-limit = 10
diameter-iteration-limit.type = IntegerParameter
diameter-iteration-limit.help = Maximum number of iterations permitted for the network diameter optimization (relevant for looped network result convergence).
diameter-iteration-limit.category = Parameters of detailed model

substation-cooling-systems = ahu, aru, scu
substation-cooling-systems.type = MultiChoiceParameter
substation-cooling-systems.choices = ahu, aru, scu, re, data
substation-cooling-systems.help = List of cooling loads to be supplied (DC mode)
substation-cooling-systems.category = Parameters of detailed model

substation-heating-systems = ahu, aru, shu, ww
substation-heating-systems.type = MultiChoiceParameter
substation-heating-systems.choices = ahu, aru, shu, ww
substation-heating-systems.help = List of heating loads to be supplied (DH mode)
substation-heating-systems.category = Parameters of detailed model

temperature-control = VT
temperature-control.type = ChoiceParameter
temperature-control.choices = VT, CT
temperature-control.help = Type of control strategy for plant operation: "VT" (Variable Temperature / Variable Flow) or "CT" (Constant Temperature / Variable Flow).
temperature-control.category = Parameters of detailed model

plant-supply-temperature = 80
plant-supply-temperature.type = RealParameter
plant-supply-temperature.help = Supply temperature of plants in celsius (relevant if temperature-control is set to 'CT').
plant-supply-temperature.category = Parameters of detailed model


[thermal-network-optimization]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network to be simulated: "DH" (district heating) or "DC" (district cooling).

network-names =
network-names.type = ListParameter
network-names.help = List of network file names for either DH (district heating) or DC (district cooling) network types.
network-names.category = Advanced

file-type = shp
file-type.type = ChoiceParameter
file-type.choices = csv, shp
file-type.help = Format of the input files (either csv file or a shape file).

set-diameter = true
set-diameter.type = BooleanParameter
set-diameter.help = True if diameters are set by min and max flow rates, false if diameters are considered a fixed input.

load-max-edge-flowrate-from-previous-run = false
load-max-edge-flowrate-from-previous-run.type = BooleanParameter
load-max-edge-flowrate-from-previous-run.help = True to bypass the calc_max_edge_flowrate function using results from the previous simulation (useful for debugging).
load-max-edge-flowrate-from-previous-run.category = Advanced

start-t = 0
start-t.type = IntegerParameter
start-t.help = Start hour for calculations (0-based).
start-t.category = Advanced

stop-t = 8760
stop-t.type = IntegerParameter
stop-t.help = Stop hour for calculations (0-based, upper bound).
stop-t.category = Advanced

network-name =
network-name.type = StringParameter
network-name.help = Name of the network for which to run the network optimization.
network-name.category = Advanced

possible-plant-sites =
possible-plant-sites.type = ListParameter
possible-plant-sites.help = List building names considered candidates for plant locations (leave blank if all buildings are considered candidates).
possible-plant-sites.category = Advanced

min-number-of-plants = 1
min-number-of-plants.type = IntegerParameter
min-number-of-plants.help = Minimum number of plants used for thermal network optimization (minimum value is 1).
min-number-of-plants.category = Advanced

max-number-of-plants = 1
max-number-of-plants.type = IntegerParameter
max-number-of-plants.help = Maximum number of plants used for thermal network optimization (minimum value is 1).
max-number-of-plants.category = Advanced

number-of-individuals = 6
number-of-individuals.type = IntegerParameter
number-of-individuals.help = Number of individuals at the start of the optimization (parameter for genetic algorithm).
number-of-individuals.category = Advanced

chance-of-mutation = 20
chance-of-mutation.type = RealParameter
chance-of-mutation.help = Percentage chance of mutation in the genetic algorithm.
chance-of-mutation.category = Advanced

number-of-generations = 20
number-of-generations.type = IntegerParameter
number-of-generations.help = Number of generations used for thermal network optimization.
number-of-generations.category = Advanced

lucky-few = 1
lucky-few.type = IntegerParameter
lucky-few.help = Number of individuals which are randomly picked despite not being optimal (must be smaller than the number of individuals minus one).
lucky-few.category = Advanced

optimize-loop-branch = false
optimize-loop-branch.type = BooleanParameter
optimize-loop-branch.help = True if the thermal network optimization will dictate the use of purely branched or mixed network layouts.
optimize-loop-branch.category = Advanced

optimize-network-loads = false
optimize-network-loads.type = BooleanParameter
optimize-network-loads.help = True if the thermal network optimization will dictate which heat loads are provided by the network.
optimize-network-loads.category = Advanced

optimize-building-connections = false
optimize-building-connections.type = BooleanParameter
optimize-building-connections.help = True if the thermal network optimization will dictate which buildings to connect to the network.
optimize-building-connections.category = Advanced

use-rule-based-approximation = false
use-rule-based-approximation.type = BooleanParameter
use-rule-based-approximation.help = True if the thermal network optimization will use a rule based approach to narrow the solution space (e.g. by limiting the amount of possible plant locations).
use-rule-based-approximation.category = Advanced

use-representative-week-per-month = false
use-representative-week-per-month.type = BooleanParameter
use-representative-week-per-month.help = True to use the data for first week of each month instead of the full month.
use-representative-week-per-month.category = Advanced

minimum-mass-flow-iteration-limit = 30
minimum-mass-flow-iteration-limit.type = IntegerParameter
minimum-mass-flow-iteration-limit.help = Maximum number of iterations permitted for the increase of minimum mass flows in the network.
minimum-mass-flow-iteration-limit.category = Advanced

minimum-edge-mass-flow = 0.1
minimum-edge-mass-flow.type = RealParameter
minimum-edge-mass-flow.help = Minimum mass flow rate permitted in the network (in kg/s). If the mass flow rate in any edge is below this value at any time period, the thermal network will be re-sized accordingly.
minimum-edge-mass-flow.category = Advanced

diameter-iteration-limit = 10
diameter-iteration-limit.type = IntegerParameter
diameter-iteration-limit.help = Maximum number of iterations permitted for the network diameter optimization (relevant for looped network result convergence).
diameter-iteration-limit.category = Advanced

substation-cooling-systems = ahu, aru, scu
substation-cooling-systems.type = ListParameter
substation-cooling-systems.help = List of cooling loads to be supplied (DC mode).
substation-cooling-systems.category = Advanced

substation-heating-systems = ahu, aru, shu, ww
substation-heating-systems.type = ListParameter
substation-heating-systems.help = List of heating loads to be supplied (DH mode).
substation-heating-systems.category = Advanced

disconnected-buildings =
disconnected-buildings.type = ListParameter
disconnected-buildings.help = List of buildings which are disconnected from the network.
disconnected-buildings.category = Advanced

yearly-cost-calculations = false
yearly-cost-calculations.type = BooleanParameter
yearly-cost-calculations.help = True if cost calculations of CT opex and heat/cooling production are based on a yearly basis.
yearly-cost-calculations.category = Advanced

[optimization]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DC, DH
network-type.help = District Heating (DH) or District Cooling (DC)

technologies-DH = NG_Cogen, WB_Cogen, DB_Cogen, NG_BaseBoiler, NG_PeakBoiler, WS_HP, SS_HP, GS_HP, DS_HP, PVT, SC_ET, SC_FP, PV
technologies-DH.type = MultiChoiceParameter
technologies-DH.choices = NG_Cogen, WB_Cogen, DB_Cogen, NG_BaseBoiler, NG_PeakBoiler, WS_HP, SS_HP, GS_HP, DS_HP, PVT, SC_ET, SC_FP, PV
technologies-DH.help = Technologies to consider during optimization of the central supply system when DH is selected

technologies-DC = NG_Trigen, WS_BaseVCC, WS_PeakVCC, AS_BaseVCC, AS_PeakVCC, Storage, PV
technologies-DC.type = MultiChoiceParameter
technologies-DC.choices = NG_Trigen, WS_BaseVCC, WS_PeakVCC, AS_BaseVCC, AS_PeakVCC, Storage, PV
technologies-DC.help = Technologies to consider during optimization of the central supply system when DC is selected

objective-functions-DC = system_energy_demand, anthropogenic_heat
objective-functions-DC.type = MultiChoiceParameter
objective-functions-DC.choices = cost, GHG_emissions, system_energy_demand, anthropogenic_heat
objective-functions-DC.help = Objective functions to evaluate in the optimization when DC is selected. When DH is selected, the two set objective functions are 'GHG_emissions' and 'cost'

cold-storage-type =
cold-storage-type.type = SingleThermalStorageParameter
cold-storage-type.help = Thermal Storage technology to consider based on the Conversion local database

population-size =
population-size.type = IntegerParameter
population-size.help = this denotes the number of individuals, leave in blank to compute the suggested by deb et al., 2014 (92)
population-size.nullable = true
population-size.category = Advanced

number-of-generations = 100
number-of-generations.type = IntegerParameter
number-of-generations.help = number of generations for genetic algorithm (NSGA-III)
number-of-generations.category = Advanced

random-seed = 100
random-seed.type = IntegerParameter
random-seed.help = Random seed to make it easy to replicate the results of the scenarios.
random-seed.category = Advanced

mutation-prob = 0.1
mutation-prob.type = RealParameter
mutation-prob.help = Mutation probability for genetic algorithm (NSGA-III)
mutation-prob.category = Advanced

mutation-method-integer = Flipbit
mutation-method-integer.type = ChoiceParameter
mutation-method-integer.choices = Flipbit, Shuffle
mutation-method-integer.help = Mutation method for integer variables (network connectivity)
mutation-method-integer.category = Advanced

mutation-method-continuous = Polynomial
mutation-method-continuous.type = ChoiceParameter
mutation-method-continuous.choices = Polynomial, Shuffle
mutation-method-continuous.help = Mutation method for continuous variables (plant capacities)
mutation-method-continuous.category = Advanced

crossover-prob = 0.9
crossover-prob.type = RealParameter
crossover-prob.help = Cross-over probability for genetic algorithm (NSGA-III)
crossover-prob.category = Advanced

crossover-method-integer = Uniform
crossover-method-integer.type = ChoiceParameter
crossover-method-integer.choices = Uniform, TwoPoint
crossover-method-integer.help = Crossover method for integer variables (network connectivity)
crossover-method-integer.category = Advanced

crossover-method-continuous = Uniform
crossover-method-continuous.type = ChoiceParameter
crossover-method-continuous.choices = Uniform, TwoPoint
crossover-method-continuous.help = Crossover method for continuous variables (plant capacities)
crossover-method-continuous.category = Advanced

[optimization-new]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DC, DH
network-type.help = District Heating (DH) or District Cooling (DC)

cooling-components = ABSORPTION_CHILLERS, VAPOR_COMPRESSION_CHILLERS, UNITARY_AIR_CONDITIONERS
cooling-components.type = MultiChoiceParameter
cooling-components.choices = ABSORPTION_CHILLERS, VAPOR_COMPRESSION_CHILLERS, UNITARY_AIR_CONDITIONERS
cooling-components.help = Technologies to consider for providing cooling energy (order indicates priority for deployment)

heating-components = BOILERS, COGENERATION_PLANTS, HEAT_PUMPS
heating-components.type = MultiChoiceParameter
heating-components.choices = BOILERS, COGENERATION_PLANTS, HEAT_PUMPS
heating-components.help = Technologies to consider for providing heat (order indicates priority for deployment)

heat-rejection-components = COOLING_TOWERS
heat-rejection-components.type = MultiChoiceParameter
heat-rejection-components.choices = COOLING_TOWERS
heat-rejection-components.help = Technologies used for heat rejection

maximum-number-of-networks = 2
maximum-number-of-networks.type = IntegerParameter
maximum-number-of-networks.help = Maximum number of thermal networks that should be generated across the district.

objective-functions = system_energy_demand, anthropogenic_heat
objective-functions.type = MultiChoiceParameter
objective-functions.choices = cost, GHG_emissions, system_energy_demand, anthropogenic_heat
objective-functions.help = Objective functions based on which supply systems and networks should be evaluated in the optimization

generate-detailed-outputs = false
generate-detailed-outputs.type = BooleanParameter
generate-detailed-outputs.help = Generate hourly profiles describing the supply system behaviours
generate-detailed-outputs.category = Advanced

retain-run-results = false
retain-run-results.type = BooleanParameter
retain-run-results.help = Retain the results of this run, if deactivated results will be overwritten by the next run
retain-run-results.category = Advanced

available-energy-sources = power_grid, fossil_fuels, bio_fuels
available-energy-sources.type = MultiChoiceParameter
available-energy-sources.choices = power_grid, fossil_fuels, bio_fuels
available-energy-sources.help = The energy carriers within these categories are assumed to have limitless supply.
available-energy-sources.category = Advanced

available-energy-potentials = photovoltaic_panels, photovoltaic_thermal_panels, solar_thermal_panels, geothermal_energy, water_bodies, sewage
available-energy-potentials.type = MultiChoiceParameter
available-energy-potentials.choices = photovoltaic_panels, photovoltaic_thermal_panels, solar_thermal_panels, geothermal_energy, water_bodies, sewage
available-energy-potentials.help = Supply system components that can provide electricity to the main heating/cooling components
available-energy-potentials.category = Advanced

component-efficiency-model-complexity = constant
component-efficiency-model-complexity.type = ChoiceParameter
component-efficiency-model-complexity.choices = constant, non-linear
component-efficiency-model-complexity.help = Complexity of the efficiency models describing the behaviour of the supply system components.
component-efficiency-model-complexity.category = Advanced

systems-algorithm = NSGAIII
systems-algorithm.type = ChoiceParameter
systems-algorithm.choices = NSGAIII
systems-algorithm.help = Genetic optimisation algorithm (selection) applied for supply systems
systems-algorithm.category = Optimization algorithm parameters

systems-mutation-method = PolynomialBounded
systems-mutation-method.type = ChoiceParameter
systems-mutation-method.choices = UniformBounded, PolynomialBounded
systems-mutation-method.help = Mutation method applied to genomes encoding supply systems
systems-mutation-method.category = Optimization algorithm parameters

systems-crossover-method = Uniform
systems-crossover-method.type = ChoiceParameter
systems-crossover-method.choices = OnePoint, TwoPoint, Uniform
systems-crossover-method.help = Crossover method applied to genomes encoding supply systems
systems-crossover-method.category = Optimization algorithm parameters

networks-algorithm = NSGAIII
networks-algorithm.type = ChoiceParameter
networks-algorithm.choices = NSGAIII
networks-algorithm.help = Genetic optimisation algorithm (selection) applied for networks
networks-algorithm.category = Optimization algorithm parameters

networks-mutation-method = ClusterSwitch
networks-mutation-method.type = ChoiceParameter
networks-mutation-method.choices = ShuffleIndexes, UniformInteger, ClusterSwitch
networks-mutation-method.help = Mutation method applied to genomes encoding networks
networks-mutation-method.category = Optimization algorithm parameters

networks-crossover-method = ClusterSwap
networks-crossover-method.type = ChoiceParameter
networks-crossover-method.choices = OnePoint, TwoPoint, Uniform, ClusterSwap, ClusterAlignment
networks-crossover-method.help = Crossover method applied to genomes encoding networks
networks-crossover-method.category = Optimization algorithm parameters

building-clustering-method = Louvain
building-clustering-method.type = ChoiceParameter
building-clustering-method.choices = HDBSCAN, Louvain
building-clustering-method.help = Method for clustering buildings before the optimization (only relevant for clustering-based mutation and crossover operations for networks)
building-clustering-method.category = Optimization algorithm parameters

networks-overlap-correction-method = Random
networks-overlap-correction-method.type = ChoiceParameter
networks-overlap-correction-method.choices = None, MergeOnOverlap, CutOnOverlap, DeleteOnOverlap, Random
networks-overlap-correction-method.help = Method for eliminating overlapping networks in the district
networks-overlap-correction-method.category = Optimization algorithm parameters

ga-population-size =
ga-population-size.type = IntegerParameter
ga-population-size.help = this denotes the number of individuals used in the genetic algorithm (for NSGAIII leave in blank to compute the suggested by deb et al., 2014 (92))
ga-population-size.nullable = true
ga-population-size.category = Optimization algorithm parameters

ga-number-of-generations = 3
ga-number-of-generations.type = IntegerParameter
ga-number-of-generations.help = number of generations for the genetic algorithm
ga-number-of-generations.category = Optimization algorithm parameters

ga-mutation-prob = 0.1
ga-mutation-prob.type = RealParameter
ga-mutation-prob.help = Independent probability for the mutation of chromosomes in the genetic algorithms
ga-mutation-prob.category = Optimization algorithm parameters

ga-crossover-prob = 0.3
ga-crossover-prob.type = RealParameter
ga-crossover-prob.help = Independent probability for the recombination of chromosomes in the genetic algorithms (if applicable)
ga-crossover-prob.category = Optimization algorithm parameters

ga-mutation-eta = 0.5
ga-mutation-eta.type = RealParameter
ga-mutation-eta.help = Crowding degree of the mutation. A high eta will produce a mutant resembling its parent, while a small eta will produce a solution much more different.
ga-mutation-eta.category = Optimization algorithm parameters

min-head-substation = 20
min-head-substation.type = RealParameter
min-head-substation.help = Minimum head loss in kPa expected at each thermal transfer substation
min-head-substation.category = Network model parameters

hw-friction-coefficient = 100
hw-friction-coefficient.type = IntegerParameter
hw-friction-coefficient.help = Hanzen-Williams friction coefficient considered for the pipes in mm
hw-friction-coefficient.category = Network model parameters

peak-load-velocity = 2
peak-load-velocity.type = RealParameter
peak-load-velocity.help = Maximum velocity expected in pipes in m/s (Higher values result in smaller pipe diameters)
peak-load-velocity.category = Network model parameters

equivalent-length-factor = 0.2
equivalent-length-factor.type = RealParameter
equivalent-length-factor.help = fraction of pressure losses expected dues to accessories in the network (valid values within 0.0 and 0.6)
equivalent-length-factor.category = Network model parameters

peak-load-percentage = 100
peak-load-percentage.type = RealParameter
peak-load-percentage.help = Percentage of the peak demand in % to use for pipe sizing (valid values within 0 and 200)
peak-load-percentage.category = Network model parameters

network-lifetime = 20
network-lifetime.type = RealParameter
network-lifetime.help = Economic lifetime of the network in years
network-lifetime.category = Network model parameters

[plots]
buildings =
buildings.type = BuildingsParameter
buildings.help = List of building names to generate plots (leave blank for all buildings).

building =
building.type = SingleBuildingParameter
building.help = Building ID for the Energy Demand, Comfort Plot and Heating Reset-schedule plot. Used only for the
                dashboard plots. For the plots tool, use a single building in the "buildings" variable.

categories = demand, solar_potentials, solar_technology, life_cycle_analysis, thermal_network
categories.type = MultiChoiceParameter
categories.choices = demand, solar_potentials, solar_technology, life_cycle_analysis, thermal_network
categories.help = List of plot categories to be created.

network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network: "DH" (district heating) or "DC" (district cooling).

network-name =
network-name.type = StringParameter
network-name.help = The name of the network to plot (defaults to an empty string).

plant-node =
plant-node.type = PlantNodeParameter
plant-node.network-type = plots:network-type
plant-node.network-name = plots:network-name
plant-node.help = The plant node to plot.

timeframe = monthly
timeframe.type = ChoiceParameter
timeframe.choices = hourly, daily, weekly, monthly, yearly
timeframe.help = Select one individual configuration of the supply system to visualize.

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy, surface area
normalization.help = Select normalization parameter

[plots-optimization]
generation =
generation.type = GenerationParameter
generation.help = Select one generation of the optimization routine to be plotted.

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy
normalization.help = Select normalization parameter

[plots-supply-system]
system = sys_2_15
system.type = SystemParameter
system.help = Select one system of the optimization routine where the supply system is going to be studied.
system.nullable = true

timeframe = monthly
timeframe.type = ChoiceParameter
timeframe.choices = hourly, daily, weekly, monthly, yearly
timeframe.help = Select one individual configuration of the supply system to visualize.

[plots-comparisons]
scenarios-and-systems = {general:scenario-name}_sys_today_
scenarios-and-systems.type = MultiSystemParameter
scenarios-and-systems.help = List of pairs of scenario and systems

normalization = none
normalization.type = ChoiceParameter
normalization.choices = none, gross floor area, net floor area, air conditioned floor area, building occupancy, surface area
normalization.help = Select normalization parameter

[sewage]
heat-exchanger-length = 120
heat-exchanger-length.type = IntegerParameter
heat-exchanger-length.help = Length of pipeline available for a heat exchanger in the sewage in meters (at least 100 meters).

sewage-water-ratio = 0.95
sewage-water-ratio.type = RealParameter
sewage-water-ratio.nullable = true
sewage-water-ratio.help = Ratio of decrease/increase in sewage water due to solids and water intakes.

sewage-water-district = 50
sewage-water-district.type = RealParameter
sewage-water-district.help = How many liters of wastewater come from the neighboring districts through the heat-exchanger LPs

[water-body]
max-water-volume-withdrawal = 1000
max-water-volume-withdrawal.type = RealParameter
max-water-volume-withdrawal.help = max water volume that can be withdrawn in m3/h

max-delta-temperature-withdrawal = 8
max-delta-temperature-withdrawal.type = RealParameter
max-delta-temperature-withdrawal.help = max delta of temperature that can be withdrawn in C

temperature-max = 6
temperature-max.type = RealParameter
temperature-max.help  = maximum temperature of the water body during the year at the extraction point in C

temperature-min= 4
temperature-min.type = RealParameter
temperature-min.help = = average temperature of the water body during the year at the extraction point (it can be 30m) in C

[shallow-geothermal]
buildings-available =
buildings-available.type = BuildingsParameter
buildings-available.help = List of buildings whose footprint can be used for shallow geothermal exploration. Leave it blank to get all buildings area

extra-area-available = 0.0
extra-area-available.type = RealParameter
extra-area-available.help = Add extra area where shallow geothermal probes can be installed in m2.

average-probe-depth = 10
average-probe-depth.type = RealParameter
average-probe-depth.help = Average depth of geothermal probes in m.

[create-new-scenario]
project = cea-new-project
project.type = StringParameter
project.help = Name of the new project.

scenario = baseline
scenario.type = StringParameter
scenario.help = Name of the baseline scenario.

output-path = {general:scenario}/../..
output-path.type = PathParameter
output-path.help = Path to new project location.

zone = {general:scenario}/inputs/building-geometry/zone.shp
zone.type = FileParameter
zone.extensions = shp
zone.help = Path to geometry of the zone.

terrain = {general:scenario}/inputs/topography/terrain.tif
terrain.type = FileParameter
terrain.nullable = true
terrain.extensions = tif tiff
terrain.help = Path to the digital elevation model.

streets = {general:scenario}/inputs/networks/streets.shp
streets.type = FileParameter
streets.nullable = true
streets.extensions = shp
streets.help = Path to street geometry.

surroundings =
surroundings.type = FileParameter
surroundings.extensions = shp
surroundings.nullable = true
surroundings.help = Path to geometry of zone and surroundings (blank if shading effects are not considered).
surroundings.category = Optional

typology =
typology.type = FileParameter
typology.extensions = dbf
typology.nullable = true
typology.help = Path to typology database (blank if CEA should create one for you).
typology.category = Optional


[decentralized]

[network-layout]
network-type = DH
network-type.type = ChoiceParameter
network-type.choices = DH, DC
network-type.help = Type of district network: "DH" (district heating), or "DC" (district cooling)

connected-buildings =
connected-buildings.type = BuildingsParameter
connected-buildings.help = List of buildings/customers to connect (blank if all buildings connected).

plant-buildings =
plant-buildings.type = ListParameter
plant-buildings.help = List of buildings where a plant is located (blank for plant to be created automatically at the anchor load).
possible-plant-sites.category = Advanced

pipe-diameter = 150
pipe-diameter.type = IntegerParameter
pipe-diameter.help = Nominal diameter of pipe in mm.
pipe-diameter.category = Advanced

type-mat = T1
type-mat.type = ChoiceParameter
type-mat.choices = T1, T2, T3
type-mat.help = Type of default material for piping.
type-mat.category = Advanced

allow-looped-networks = false
allow-looped-networks.type = BooleanParameter
allow-looped-networks.help = True if network loops should be created.
create-plant.category = Advanced

consider-only-buildings-with-demand = true
consider-only-buildings-with-demand.type = BooleanParameter
consider-only-buildings-with-demand.help = whether when creating networks ONLY buildings with energy demand should be considered or not. default is true
consider-only-buildings-with-demand.category = Advanced

[multi-criteria]
generation = 3
generation.type = IntegerParameter
generation.help = Generation for which the multi-criteria analysis should be performed.

annualized-capital-costs = 0.4
annualized-capital-costs.type = RealParameter
annualized-capital-costs.help = Weight for total annualized costs (as part of economic sustainability).

total-capital-costs = 0.1
total-capital-costs.type = RealParameter
total-capital-costs.help = Weight factor for total investment costs (as part of economic sustainability).

annual-operation-costs = 0.1
annual-operation-costs.type = RealParameter
annual-operation-costs.help = Weight factor for operation costs (as part of economic sustainability).

annual-emissions = 0.4
annual-emissions.type = RealParameter
annual-emissions.help = Weight factor for emissions (as part of environmental sustainability).

[workflow]
workflow = district-heating-network
workflow.type = WorkflowParameter
workflow.help = Either a built-in workflow (located in cea/workflows) OR a path to a user-specified workflow YAML file

resume = off
resume.type = BooleanParameter
resume.help = Turn this parameter on to resume the workflow from the last successful step

resume-file =
resume-file.type = ResumeFileParameter
resume-file.extensions = yml
resume-file.direction = output
resume-file.help = Path to a file to store information on how to resume a workflow in case it doesn't run through
resume-file.category = Advanced

trace-input = off
trace-input.type = BooleanParameter
trace-input.help = If true, each step is run with the trace-inputlocator to collect info about locator methods

[rename-building]
old =
old.type = SingleBuildingParameter
old.help = The name of the building to rename

new =
new.type = StringParameter
new.help = The new name of the building (must be unique)

[create-mixed-use-type]
use-type = mixed_use
use-type.type = StringParameter
use-type.help = The name of the new use-type

metadata = mixed-use
metadata.type = StringParameter
metadata.help = Description for the new use-type

ratios = MULTI_RES|1.0
ratios.type = UseTypeRatioParameter
ratios.help = List of use type and ratio pairs (e.g. "MULTI_RES|0.5,SCHOOL|0.5")

[create-polygon]
coordinates = (-1, 0), (0, 1), (1, 0)
coordinates.type = CoordinateListParameter
coordinates.help = Comma-separated list of coordinate tuples i.e. (lat, lon) of the polygon

filename = polygon
filename.type = StringParameter
filename.help = Name to use for polygon shapefile outputs

[server]
project-root = {general:project}/..
project-root.type = PathParameter
project-root.help = Path to the root of all projects, assuming they are all stored in one location

protocol = http
protocol.type = ChoiceParameter
protocol.choices = http, https
protocol.help = The protocol to use (http / https)

host = 127.0.0.1
host.type = StringParameter
host.help = HOSTNAME of the CEA Server (the cea dashboard command will listen on this host, the GUI will connect on this port)

port = 5050
port.type = IntegerParameter
port.help = PORT of the CEA Server (the cea dashboard command will listen to this port, the GUI will connect on this port)

browser = false
browser.type = BooleanParameter
browser.help = Launch GUI in the browser

[worker]
url = http://localhost:5050/server
url.type = StringParameter
url.help = URL of the CEA server api

[schemas]
locator-method = get_zone_geometry
locator-method.type = StringParameter
locator-method.help = the name of the locator-method to document

args = {}
args.type = JsonParameter
args.help = (optional) the arguments to pass to the locator-method (json dictionary)

[development]
nsis =
nsis.type = StringParameter
nsis.help = Path to the makensis.exe program (e.g. C:\Program Files (x86)\NSIS\Bin\makensis.exe)

conda =
conda.type = StringParameter
conda.help = Path to the conda.bat / conda.exe file (e.g. C:\Users\darthoma\Miniconda2\condabin\conda.bat)

gui =
gui.type = StringParameter
gui.help = Path to the repository for the GUI (e.g. c:\Users\darthoma\Documents\GitHub\CityEnergyAnalyst-GUI)

yarn =
yarn.type = StringParameter
yarn.help = Path to the yarn.cmd file (e.g. C:\Users\darthoma\AppData\Roaming\npm\yarn.cmd)

release-version =
release-version.type = StringParameter
release-version.help = Version number for new release in Semantic Versioning format (e.g., 1.0.0)
