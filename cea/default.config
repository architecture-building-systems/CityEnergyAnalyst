[general]
scenario = C:/reference-case-open/baseline
scenario.type = PathParameter
scenario.help = Path to the scenario to run

weather = Zug
weather.type = WeatherPathParameter
weather.help = either a full path to a weather file or the name of one of the weather files shipped with the CEA

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = Use multiple CPUs for quicker calculation, if available

region = CH
region.type = ChoiceParameter
region.choices = CH SIN custom
region.help = The region to use for the databases (either CH or SIN) - set to "custom" if you want to edit them


[data-helper]
archetypes = comfort architecture HVAC internal-loads
archetypes.type = MultiChoiceParameter
archetypes.choices = comfort architecture HVAC internal-loads
archetypes.help = List of archetypes to process

[demand-graphs]
analysis-fields = Ealf_kWh Qhsf_kWh Qwwf_kWh Qcsf_kWh
analysis-fields.type = MultiChoiceParameter
analysis-fields.choices = Eref_kWh Qhprof_kWh Eprof_kWh Eauxf_ve_kWh QEf_kWh Egenf_cs_kWh Eauxf_hs_kWh Ealf_kWh Qhsf_kWh Qwwf_kWh Ecaf_kWh Qcs_kWh Qhs_kWh Eauxf_cs_kWh Edataf_kWh Eauxf_fw_kWh Eauxf_kWh Eauxf_ww_kWh Qcsf_kWh Qww_kWh Qcsf_lat_kWh Qcdataf_kWh QCf_kWh Eaf_kWh QHf_kWh Qhsf_lat_kWh Qcref_kWh Elf_kWh Ef_kWh
analysis-fields.help = list of fields in the demand output to analyze

[heatmaps]
file-to-analyze = {general:scenario}/outputs/data/demand/Total_demand.csv
file-to-analyze.type = PathParameter
file-to-analyze.help = file name to analyze

analysis-fields = Qcs_MWhyr Qhs_MWhyr
analysis-fields.type = ListParameter
analysis-fields.help = space-separated list of columns in the file to analyze

[operation-costs]
plot-qww = true
plot-qww.type = BooleanParameter
plot-qww.help = Set to true to plot Qww

plot-qhs = true
plot-qhs.type = BooleanParameter
plot-qhs.help = Set to true to plot Qhs

plot-qcs = true
plot-qcs.type = BooleanParameter
plot-qcs.help = Set to true to plot Qcs

plot-qcdata = true
plot-qcdata.type = BooleanParameter
plot-qcdata.help = Set to true to plot Qcdata

plot-qcrefri = true
plot-qcrefri.type = BooleanParameter
plot-qcrefri.help = Set to true to plot Qcrefri

plot-eal = true
plot-eal.type = BooleanParameter
plot-eal.help = Set to true to plot Eal

plot-eaux = true
plot-eaux.type = BooleanParameter
plot-eaux.help = Set to true to plot Eaux

plot-epro = true
plot-epro.type = BooleanParameter
plot-epro.help = Set to true to plot Epro

plot-edata = true
plot-edata.type = BooleanParameter
plot-edata.help = Set to true to plot Edata

[emissions]
emissions-variables = Qcs Qhs Qcrefri Eal Epro Eaux Qww Edata Qcdata
emissions-variables.type = MultiChoiceParameter
emissions-variables.choices = Qcs Qhs Qcrefri Eal Epro Eaux Qww Edata Qcdata
emissions-variables.help = List of variables to create separate files for (choose from
                           Qcs Qhs Qcrefri Eal Epro Eaux Qww Edata Qcdata)

[embodied-energy]
year-to-calculate = 2020
year-to-calculate.type = IntegerParameter
year-to-calculate.help = The year to base the calculations on

[scenario-plots]
project = {general:scenario}/..
project.type = PathParameter
project.help = Path to the folder containing the scenarios

scenarios = baseline scenario1 scenario2
scenarios.type = SubfoldersParameter
scenarios.parent = scenario-plots:project
scenarios.help = List of scenarios to plot (subdirectories of the project)

output-file = {scenario-plots:project}/scenario-plots.pdf
output-file.type = FileParameter
output-file.extensions = pdf
output-file.help = Path of the output pdf file to create

[benchmark-graphs]
project = {general:scenario}/..
project.type = PathParameter
project.help = Path to the folder containing the scenarios

scenarios = baseline scenario1 scenario2
scenarios.type = SubfoldersParameter
scenarios.parent = benchmark-graphs:project
scenarios.help = List of scenarios to plot (subdirectories of the project)

output-file = {benchmark-graphs:project}/benchmark-graphs.pdf
output-file.type = FileParameter
output-file.extensions = pdf
output-file.help = Path of the output pdf file to create

[extract-reference-case]
destination = C:/
destination.type = PathParameter
destination.help = destination folder to extract the reference case to. Since the reference case has subfolders, the
                   resulting scenario for the default (``C:/``) will be: ``C:/reference-case-open/baseline``.

[demand]
# heating-season-start = 2017-08-01
# heating-season-start.type = DateParameter

# heating-season-end = 2017-03-01
# heating-season-end.type = DateParameter

# has-heating-season = true
# has-heating-season.type = BooleanParameter

# cooling-season-start = 2017-03-02
# cooling-season-start.type = DateParameter

# cooling-season-end = 2017-07-31
# cooling-season-end.type = DateParameter

# has-cooling-season = true
# has-cooling-season.type = BooleanParameter

use-dynamic-infiltration-calculation = false
use-dynamic-infiltration-calculation.type = BooleanParameter
use-dynamic-infiltration-calculation.help = Use the dynamic infiltration calculation (slower!)

use-daysim-radiation = true
use-daysim-radiation.type = BooleanParameter
use-daysim-radiation.help = set to false to use ArcGIS radiation as input, default is true

[radiation]
latitude =
latitude.type = NullableRealParameter
latitude.help = latitude of the project - leave blank to calculate the latitude from the shape files

longitude =
longitude.type = NullableRealParameter
longitude.help = longitude of the project - leave blank to calculate the longitude from the shape files

year =  2014
year.type = IntegerParameter
year.help = the year to calculate radiation for

[solar]
date-start = 2016-01-01
date-start.type = DateParameter
date-start.help =  site specific input (format: yyyy-mm-dd)

type-PVpanel = PV1
type-PVpanel.type = ChoiceParameter
type-PVpanel.choices = PV1 PV2 PV3
type-PVpanel.help = type of panels, for PVT, please choose type_PVpanel = 'PV1', type_SCpanel = 'SC1',
                    PV1: monocrystalline, PV2: poly, PV3: amorphous. please refer to supply system database.

type-SCpanel = SC1
type-SCpanel.type = ChoiceParameter
type-SCpanel.choices = SC1 SC2
type-SCpanel.help = type of solar collector, SC1: flat plat collectors, SC2: evacuated tubes

panel-on-roof = True
panel-on-roof.type = BooleanParameter
panel-on-roof.help = installed locations, flag for considering panels on roof

panel-on-wall = True
panel-on-wall.type = BooleanParameter
panel-on-wall.help = installed locations, flag for considering panels on wall

min-radiation = 0.75
min-radiation.type = RealParameter
min-radiation.help = filtering criteria: at least a minimum production of this % from the maximum in the area.

solar-window-solstice = 4
solar-window-solstice.type = IntegerParameter
solar-window-solstice.help = desired hours of solar window on the solstice for spacing panels.

T-in-SC = 75
T-in-SC.type = RealParameter
T-in-SC.type = RealParameter
T-in-SC.help = inlet temperature of solar collectors [C]

T-in-PVT = 35
T-in-PVT.type = RealParameter
T-in-PVT.help = inlet temperature of PVT panels [C]

dpl = 200
dpl.type = RealParameter
dpl.help = pressure losses per length of pipe according to Solar District Heating Guidelines, [Pa/m]

fcr = 1.3
fcr.type = RealParameter
fcr.help = additional loss factor due to accessories

Ro = 1000
Ro.type = RealParameter
Ro.help = water density [kg/m3]

eff-pumping = 0.6
eff-pumping.type = RealParameter
eff-pumping.help = pump efficiency

k-msc-max = 0.217
k-msc-max.type = RealParameter
k-msc-max.help = solar collectors heat losses, linear heat transmittance coefficient of piping (2*pi*k/ln(Do/Di))) [W/mK]

[radiation-daysim]
buildings =
buildings.type = ListParameter
buildings.help = a list of buildings to run the simulation for - leave blank to simulate all buildings

rad-ab = 4
rad-ab.type = IntegerParameter
rad-ab.help = Number of ambient bounces
rad-ab.category = Daysim radiation simulation parameters. doubling this value can double rendering time

rad-ad = 512
rad-ad.type = IntegerParameter
rad-ad.help = Number of ambient divisions
rad-ad.category = Daysim radiation simulation parameters. doubling value may double rendering time

rad-as = 32
rad-as.type = IntegerParameter
rad-as.help = Number of ambient super-samples
rad-as.category = Daysim radiation simulation parameters, doubling value may double rendering time

rad-ar = 20
rad-ar.type = IntegerParameter
rad-ar.help = Ambient resolution
rad-ar.category = Daysim radiation simulation parameters, doubling value may double rendering time

rad-aa = 0.15
rad-aa.type = RealParameter
rad-aa.help = Ambient accurracy
rad-aa.category = Daysim radiation simulation parameters. doubling value may double rendering time

rad-lr = 8
rad-lr.type = IntegerParameter
rad-lr.help = Maximum number of reflections
rad-lr.category = Daysim radiation simulation parameters, doubling value may double rendering time

rad-st = 0.5
rad-st.type = RealParameter
rad-st.help = Specular sampling threshold
rad-st.category = Daysim radiation simulation parameters

rad-sj = 0.7
rad-sj.type = RealParameter
rad-sj.help = Specular sampling jitter
rad-sj.category = Daysim radiation simulation parameters

rad-lw = 0.05
rad-lw.type = RealParameter
rad-lw.help = Minimum weight of each ray
rad-lw.category = Daysim radiation simulation parameters

rad-dj = 0.7
rad-dj.type = RealParameter
rad-dj.help = Direct jitter
rad-dj.category = Daysim radiation simulation parameters

rad-ds = 0
rad-ds.type = RealParameter
rad-ds.help = Direct sampling ration
rad-ds.category = Daysim radiation simulation parameters. doubling value may double rendering time

rad-dr = 0
rad-dr.type = IntegerParameter
rad-dr.help = Number of relays from secondary sources
rad-dr.category = Daysim radiation simulation parameters

rad-dp = 32
rad-dp.type = IntegerParameter
rad-dp.help = Secondary source presampling density
rad-dp.category = Daysim radiation simulation parameters. affects start-up time only, higher values take longer

roof-grid = 5
roof-grid.type = IntegerParameter
roof-grid.help =  use 200 (maximum) if you want only one point per surface
roof-grid.category = Grid for the sensors in the roof

walls-grid = 200
walls-grid.type = IntegerParameter
walls-grid.help = use 200 (maximum) if you want only one point per surface
walls-grid.category = Grid for the sensors in walls and windows

albedo = 0.2
albedo.type = RealParameter
albedo.help = Reflection for the terrain
albedo.category = Terrain parameters

n-buildings-in-chunk = 100
n-buildings-in-chunk.type = IntegerParameter
n-buildings-in-chunk.help =  Min number of groups of buildings sent for multiprocessing
n-buildings-in-chunk.category= Simulation parameters

zone-geometry = 2
zone-geometry.type = IntegerParameter
zone-geometry.help = Level of simplification of the zone geometry
zone-geometry.category = Geometry simplification

surrounding-geometry = 5
surrounding-geometry.type = IntegerParameter
surrounding-geometry.help = Level of simplification of the district geometry
surrounding-geometry.category = Geometry simplification

consider-windows = true
consider-windows.type = BooleanParameter
consider-windows.help = Consider windows in the geometry
consider-windows.category = Geometry simplification

consider-floors = false
consider-floors.type = BooleanParameter
consider-floors.help = Consider floors in the geometry
consider-floors.category = Geometry simplification

[retrofit-potential]
keep-partial-matches = true
keep-partial-matches.type = BooleanParameter
keep-partial-matches.help = keep buildings that attained one or more of the criteria

retrofit-scenario-name = retrofit-HVAC
retrofit-scenario-name.type = StringParameter
retrofit-scenario-name.help = the name of the scenario to create (will be placed in same parent folder as the scenario

retrofit-target-year = 2020
retrofit-target-year.type = IntegerParameter
retrofit-target-year. help = Year to calculate for
retrofit-target-year.category = age

age-threshold = 15
age-threshold.type = NullableIntegerParameter
age-threshold.help = Threshold age of HVAC (built / retrofitted)
age-threshold.category = age

eui-heating-threshold = 150
eui-heating-threshold.type = NullableRealParameter
eui-heating-threshold.help = EUI heating loads threshold, leave blank to ignore these criteria
eui-heating-threshold.category = end use intensity

eui-hot-water-threshold = 50
eui-hot-water-threshold.type = NullableRealParameter
eui-hot-water-threshold.help = EUI hot-water loads threshold, leave blank to ignore these criteria
eui-hot-water-threshold.category = end use intensity

eui-cooling-threshold = 4
eui-cooling-threshold.type = NullableRealParameter
eui-cooling-threshold.help = EUI cooling loads threshold, leave blank to ignore these criteria
eui-cooling-threshold.category = end use intensity

eui-electricity-threshold = 20
eui-electricity-threshold.type = NullableRealParameter
eui-electricity-threshold.help = EUI electricity consumption threshold, leave blank to ignore theseb criteria
eui-electricity-threshold.category = end use intensity


emissions-operation-threshold = 30
emissions-operation-threshold.type = NullableRealParameter
emissions-operation-threshold.help = Operations emissions threshold, leave blank to ignore these criteria
emissions-operation-threshold.category = emissions

heating-costs-threshold = 2
heating-costs-threshold.type = NullableRealParameter
heating-costs-threshold.help = Heating costs threshold, leave blank to ignore these criteria
heating-costs-threshold.category = operation costs

hot-water-costs-threshold = 2
hot-water-costs-threshold.type = NullableRealParameter
hot-water-costs-threshold.help = Hot-water costs threshold, leave blank to ignore these criteria
hot-water-costs-threshold.category = operation costs

cooling-costs-threshold = 2
cooling-costs-threshold.type = NullableRealParameter
cooling-costs-threshold.help = Cooling costs threshold, leave blank to ignore these criteria
cooling-costs-threshold.category = operation costs

electricity-costs-threshold = 2
electricity-costs-threshold.type = NullableRealParameter
electricity-costs-threshold.help = Electricity costs threshold, leave blank to ignore these criteria
electricity-costs-threshold.category = operation costs

heating-losses-threshold = 15
heating-losses-threshold.type = NullableRealParameter
heating-losses-threshold.help = Heating losses threshold, leave blank to ignore these criteria
heating-losses-threshold.category = HVAC System losses

hot-water-losses-threshold = 15
hot-water-losses-threshold.type = NullableRealParameter
hot-water-losses-threshold.help = Hot-water losses threshold, leave blank to ignore these criteria
hot-water-losses-threshold.category = HVAC System losses

cooling-losses-threshold = 15
cooling-losses-threshold.type = NullableRealParameter
cooling-losses-threshold.help = Cooling losses threshold, leave blank to ignore these criteria
cooling-losses-threshold.category = HVAC System losses

[sensitivity-demand]
method = sobol
method.type = ChoiceParameter
method.choices = morris sobol
method.help = Method to use valid values: "morris", "sobol"

num-samples = 1000
num-samples.type = IntegerParameter
num-samples.help = number of samples (generally 1000 or until it converges)

calc-second-order = false
calc-second-order.type = BooleanParameter
calc-second-order.help = (sobol) calc_second_order parameter

grid-jump = 2
grid-jump.type = IntegerParameter
grid-jump.help = (morris) grid_jump parameter

num-levels = 4
num-levels.type = IntegerParameter
num-levels.help = (morris) num_levels parameter

samples-folder = {general:scenario}/../samples
samples-folder.type = PathParameter
samples-folder.help = folder to place the output files (samples.npy, problem.pickle) in

variable-groups = ENVELOPE INDOOR_COMFORT INTERNAL_LOADS
variable-groups.type = MultiChoiceParameter
variable-groups.choices = ENVELOPE INDOOR_COMFORT INTERNAL_LOADS SYSTEMS ECONOMIC
variable-groups.help = List of variable groups to sample (see uncertainty_distributions.xls file)

sample-index = 0
sample-index.help=Zero-based index into the samples list to simulate
sample-index.type=IntegerParameter

number-of-simulations = 1
number-of-simulations.type = IntegerParameter
number-of-simulations.help = number of simulations to perform, default 1

simulation-folder = {general:scenario}/../simulation
simulation-folder.type = PathParameter
simulation-folder.help = folder to copy the reference case to for simulation

output-parameters = QHf_MWhyr QCf_MWhyr Ef_MWhyr QEf_MWhyr QHf0_kW QCf0_kW Ef0_kW
output-parameters.type = MultiChoiceParameter
output-parameters.choices = Eref_MWhyr Eauxf_cs0_kW Eauxf_ve0_kW Edataf0_kW Qhprof_MWhyr Ecaf0_kW Qhsf0_kW Qww0_kW QHf0_kW Eauxf_hs0_kW Eprof_MWhyr Eauxf_ve_MWhyr Qcs0_kW Qcsf_lat0_kW Qhprof0_kW QEf_MWhyr Ef0_kW Egenf_cs_MWhyr Eauxf_hs_MWhyr Eprof0_kW Ealf_MWhyr Qhsf_lat0_kW Qhsf_MWhyr Qwwf_MWhyr Ecaf_MWhyr Qcs_MWhyr Qhs_MWhyr Eauxf_cs_MWhyr Eaf0_kW Qcref0_kW Edataf_MWhyr Egenf_cs0_kW Ealf0_kW Eauxf_fw_MWhyr Eauxf_MWhyr Qhs0_kW Eauxf_ww_MWhyr Qcsf_MWhyr Qwwf0_kW QCf0_kW Qww_MWhyr Qcsf_lat_MWhyr Qcdataf0_kW Qcsf0_kW Qcdataf_MWhyr Eauxf_fw0_kW QCf_MWhyr Eauxf0_kW QEf0_kW Elf0_kW Eaf_MWhyr QHf_MWhyr Qhsf_lat_MWhyr Eauxf_ww0_kW Qcref_MWhyr Eref0_kW Elf_MWhyr Ef_MWhyr
output-parameters.help = output parameters to use

temporal-scale = yearly
temporal-scale.type = ChoiceParameter
temporal-scale.choices = yearly monthly
temporal-scale.help = temporal scale of analysis (monthly or yearly)

[dbf-tools]
# configuration for tools like excel-to-dbf and dbf-to-excel
excel-file = {general:scenario}/inputs/building-properties/technical_systems.xls
excel-file.type = FileParameter
excel-file.extensions = xls xlsx
excel-file.help = Path to the Excel file

dbf-file = C:/reference-case-open/baseline/inputs/building-properties/technical_systems.dbf
dbf-file.type = FileParameter
dbf-file.extensions = dbf
dbf-file.help = Path to the DBF file

[shapefile-tools]
# configuration for tools like excel-to-shp and shp-to-excel
excel-file = {general:scenario}/inputs/building-geometry/zone.xls
excel-file.type = FileParameter
excel-file.extensions = xls xlsx
excel-file.help = Path to the Excel file

shapefile = {general:scenario}/inputs/building-geometry/zone.shp
shapefile.type = FileParameter
shapefile.extensions = shp
shapefile.help = Path to the ESRI Shapefile

crs = {"lon_0": 7.439583333333333, "k_0": 1, "ellps": "bessel", "y_0": 200000, "no_defs": true, "proj": "somerc", "x_0": 600000, "units": "m", "lat_0": 46.95240555555556}
crs.type = JsonParameter
crs.help = contains the value to use for the crs parameter of the shapefile

index = Name
index.type = StringParameter
index.help = Use this column as the index column of the DataFrame

[test]
reference-cases = open
reference-cases.type = MultiChoiceParameter
reference-cases.choices = open zug/baseline zurich/baseline zurich/masterplan all
reference-cases.help = List of reference cases to run - check cea/tests/dodo.py@REFERENCE_CASES for the full list

